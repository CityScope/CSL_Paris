{"version":3,"sources":["components/LandingPage/LoadingSprite.js","components/LandingPage/EnterButton.js","components/LandingPage/Video.js","components/LandingPage/LandingPage.js","redux/actions.js","components/Menu/CSSwitch.js","components/Audio.js","components/Menu/Info.js","components/Menu/Logo.js","components/Menu/BigSwitch/BigSwitch.js","components/Menu/Menu.js","components/ThreeScene/ThreeUtils.js","components/ThreeScene/ThreeScene.js","App.js","redux/Provider.js","redux/initialState.js","redux/reducer.js","redux/store.js","index.js"],"names":["LoadingSprite","CircularProgress","style","borderColor","color","fontWeight","theme","createMuiTheme","typography","button","fontFamily","useStyles","makeStyles","root","margin","spacing","EnterButton","classes","className","Button","variant","Video","url","playing","controls","muted","loop","width","height","mapDispatchToProps","setStartSceneState","data","type","connect","state","readyState","LOADING","props","overrides","MuiCssBaseline","palette","background","default","h2","join","fontSize","subtitle1","subtitle2","caption","h6","box","padding","breakpoints","down","maxWidth","up","useState","startScene","setStartScene","Fragment","Box","CssBaseline","p","Typography","onClick","e","preventDefault","youtubeId","CSSwitch","switchBase","transform","common","white","backgroundColor","knobcolor","opacity","border","thumb","track","borderRadius","checked","focusVisible","Switch","focusVisibleClassName","disableRipple","audioIconWrapper","Audio","handlePause","setState","handlePlay","IconButton","this","Component","textPrimary","main","paper","marginBottom","overflow","Info","React","open","setOpen","Dialog","onClose","id","Paper","Logo","CSlogo","SvgIcon","window","xmlns","viewBox","fill","d","BigSwitch","updateChecked","value","onChange","listenToMenuUI","toggleStates","MENU_INTERACTION","switchColors","h5","h3","radio","toolBar","alignItems","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","menuIconWrapper","position","bottom","right","zIndex","LogoWrapper","left","largeIcon","appBarShift","marginLeft","easeOut","enteringScreen","hide","display","drawer","flexShrink","drawerPaper","handleToggle","toggleName","Tooltip","placement","Drawer","anchor","Collapse","timeout","in","AppBar","ListItem","scenarioSwitch","name","metricsObjSwitch","cityModelSwitch","Divider","parks","culturalBuildings","cars","bicycles","pedestrians","FormControl","component","RadioGroup","aria-label","cameraScene","target","FormControlLabel","control","Radio","label","quality","_objectDisplay","object","bool","_visability","traverse","child","THREE","visible","y","TWEEN","Tween","to","Easing","Quadratic","Out","start","onComplete","_addCustomSceneObjects","a","_loadTexture","pedestalTexture","modelColor","setHSL","modelMaterial","topModelMaterial","map","materialArray","minFilter","cubeGeo","translate","pedestalMesh","castShadow","receiveShadow","_addMetricsObject","radarBeforeText","radarAfterText","userData","metalness","roughness","side","metricsMesh","_pplLoader","URL","settings","ppl","pplCol","pplMaterial","_loadOBJmodel","model","material","scale","set","_landscapeModelsLoader","landscapeModelsWrapper","modelName","modelURL","modelPos","modelscale","then","add","rotation","_setupBloom","scene","camera","renderer","params","renderScene","RenderPass","bloomPass","UnrealBloomPass","threshold","strength","radius","bloomComposer","EffectComposer","renderToScreen","addPass","finalPass","ShaderPass","uniforms","baseTexture","bloomTexture","renderTarget2","texture","vertexShader","_shaders","vertex","fragmentShader","frag","needsSwap","finalComposer","_setupAgents","tripName","agentsWrapper","fetch","res","json","tripsData","thisTripsAgents","_makeAgents","trips","catch","err","console","error","Math","cos","sin","h","s","l","spriteText","load","spritesWarpper","i","length","spriteMaterial","transparent","sprite","blending","_handelCityModel","Promise","resolve","OBJLoader","result","_createFloor","repeatX","repeatY","path","baseText","ao","displace","normalText","anisotropy","capabilities","getMaxAnisotropy","wrapS","wrapT","repeat","aoMap","aoMapIntensity","metalnessMap","displacementMap","displacementScale","normalMap","planeMesh","x","PI","z","ThreeScene","_init","shpContainer","_sceneSetup","floor","metricsObject","agentWrapper","loading","setLoadingState","startAnimationLoop","dispose","OrbitControls","mountingDiv","maxDistance","minDistance","lookAt","antialias","alpha","setPixelRatio","devicePixelRatio","shadowMap","enabled","toneMapping","setSize","appendChild","domElement","whiteLight1","intensity","w1","low","whiteLight2","w2","orangeLight","orange","shadow","blueLight","blue","lightsWrapper","postEffect","_animateAgents","time","timeCounter","children","forEach","tripsObject","pnt","simSpeed","handleWindowResize","clientWidth","clientHeight","aspect","updateProjectionMatrix","_handleVis","prevProps","menuInteraction","cityModelObject","getObjectByName","trips_car_before","trips_car_after","trips_pedestrians_before","trips_pedestrians_after","trips_bike_before","trips_bike_after","parks_before","parks_after","cultural_before","cultural_after","metricsObj","thisMenuItem","thisLight","onUpdate","Cubic","InOut","onStart","needsUpdate","high","slectedScene","log","newCamPos","camPos","newLookAt","_chooseRenderer","render","_cameraState","theta","cameraSpeed","degToRad","updateMatrixWorld","_blockCamera","update","requestID","requestAnimationFrame","past","camLookAt","addEventListener","setTimeout","cancelAnimationFrame","removeEventListener","mouse","ray","clientX","clientY","setFromCamera","clone","objects","intersectObjects","point","rayPos","displayTHREEscene","top","visibility","ref","div","START_SCENE","App","showMenu","ProviderWrapper","store","initialState","reducer","action","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","configureStore","document","getElementById","ReactDOM","Provider"],"mappings":"0YAGe,SAASA,IACpB,OACI,6BACI,kBAACC,EAAA,EAAD,CACIC,MAAO,CACHC,YAAa,OACbC,MAAO,QACPC,WAAY,a,aCL1BC,EAAQC,YAAe,CACzBC,WAAY,CACRC,OAAQ,CACJC,WAAY,gCAKlBC,EAAYC,aAAW,SAACN,GAAD,MAAY,CACrCO,KAAM,CACF,QAAS,CACLC,OAAQR,EAAMS,QAAQ,SAKnB,SAASC,IACpB,IAAMC,EAAUN,IAEhB,OACI,kBAAC,IAAD,CAAkBL,MAAOA,GACrB,yBAAKY,UAAWD,EAAQJ,MACpB,kBAACM,EAAA,EAAD,CACIjB,MAAO,CACHC,YAAa,OACbC,MAAO,QACPC,WAAY,UAEhBe,QAAQ,YANZ,qB,uCCHDC,EAlBD,WACV,OACI,yBAAKH,UAAU,oBACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CACII,IAAK,8BACLC,SAAS,EACTC,UAAU,EACVC,OAAK,EACLC,MAAI,EACJC,MAAO,MACPC,OAAQ,WC+J5B,IAMMC,EAAqB,CACvBC,mBC7KG,SAA4BC,GAC/B,MAAO,CAAEC,KAFkB,kBAEKD,UD+KrBE,eAVS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAME,WAQcP,EAAzBI,EA7Kf,SAAqBI,GACjB,IAAM/B,EAAQC,YAAe,CACzB+B,UAAW,CACPC,eAAgB,CACZ,UAAW,CACP,IAAK,CACD,kBAAmB,QAEvB,uBAAwB,CACpBZ,MAAO,MACPC,OAAQ,UAKxBY,QAAS,CACLC,WAAY,CACRC,QAAS,SAEbtC,MAAO,CACHsC,QAAS,SAGjBlC,WAAY,CACRmC,GAAI,CACAjC,WAAY,CAAC,qBAAsB,WAAWkC,KAAK,KACnDvC,WAAY,IACZwC,SAAU,OAEdC,UAAW,CACPpC,WAAY,qCACZL,WAAY,IACZwC,SAAU,SAEdE,UAAW,CACPrC,WAAY,sCAEhBsC,QAAS,CACLtC,WAAY,qCACZmC,SAAU,OAEdI,GAAI,CACAvC,WAAY,CAAC,qBAAsB,WAAWkC,KAAK,SAKzDjC,EAAYC,aAAW,SAACN,GAAD,YAAY,CACrC4C,KAAG,GACCT,WAAY,OACZrC,MAAO,OACP+C,QAAS7C,EAAMS,QAAQ,IAHxB,cAIET,EAAM8C,YAAYC,KAAK,MAAQ,CAC5BC,SAAU,SALf,cAOEhD,EAAM8C,YAAYG,GAAG,MAAQ,CAC1BD,SAAU,SARf,cAUEhD,EAAM8C,YAAYG,GAAG,MAAQ,CAC1BD,SAAU,SAXf,0BAcY,UAdZ,2BAea,QAfb,4BAgBc,QAhBd,0BAiBY,SAjBZ,yBAkBW,QAlBX,OAhDiB,EAsEYE,oBAAS,GAtErB,mBAsEjBC,EAtEiB,KAsELC,EAtEK,KAgFlBzC,EAAUN,IAEhB,OAAK8C,EA6EM,KA3EH,kBAAC,IAAME,SAAP,KACI,kBAAC,IAAD,CAAkBrD,MAAOA,GACrB,kBAACsD,EAAA,EAAD,CAAK1C,UAAWD,EAAQiC,KACpB,kBAACW,EAAA,EAAD,MACA,kBAACD,EAAA,EAAD,CAAKE,EAAG,MACR,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,MAApB,aACA,kBAAC2C,EAAA,EAAD,CAAY3C,QAAQ,MAApB,yBACA,kBAACwC,EAAA,EAAD,CAAKE,EAAG,IACPzB,EAAMF,WACH,kBAACnC,EAAD,MAEA,yBAAKgE,QAvB7B,SAA2BC,GACvBA,EAAEC,iBAEFR,GAAc,GAEdrB,EAAMP,oBAAmB,KAmBD,kBAACd,EAAD,OAGR,kBAAC4C,EAAA,EAAD,CAAKE,EAAG,GACJ,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,aAApB,gpBAkBJ,kBAACwC,EAAA,EAAD,CAAKE,EAAG,IACR,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,MAApB,uCAGA,kBAACwC,EAAA,EAAD,CAAKE,EAAG,IACR,6BACI,6BACI,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,WAApB,gBAKR,6BACI,6BACI,kBAAC2C,EAAA,EAAD,CAAY3C,QAAQ,WAApB,sBAKR,6BACI,6BACI,kBAAC2C,EAAA,EAAD,CAAY3C,QAAQ,WAApB,UAIR,kBAACwC,EAAA,EAAD,CAAKE,EAAG,IACR,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,MAApB,gCAGA,kBAACwC,EAAA,EAAD,CAAKE,EAAG,KACR,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,WAApB,0EAIA,kBAACwC,EAAA,EAAD,CAAKE,EAAG,MAGhB,kBAAC,EAAD,CAAOK,UAAW,oB,0BEpK3B,SAASC,EAAS/B,GACrB,IAmCMpB,EAnCYL,aAAW,SAACN,GAAD,MAAY,CACrCO,KAAM,CACFc,MAAO,GACPC,OAAQ,GACRuB,QAAS,EACTrC,OAAQR,EAAMS,QAAQ,IAE1BsD,WAAY,CACRlB,QAAS,EACT,YAAa,CACTmB,UAAW,mBACXlE,MAAOE,EAAMkC,QAAQ+B,OAAOC,MAC5B,aAAc,CACVC,gBAAiBpC,EAAMqC,WAAa,OACpCC,QAAS,IAGjB,wBAAyB,CACrBvE,MAAO,OACPwE,OAAQ,mBAGhBC,MAAO,CACHlD,MAAO,GACPC,OAAQ,IAEZkD,MAAO,CACHC,aAAc,GACdN,gBAAiB,QACjBE,QAAS,GAEbK,QAAS,GACTC,aAAc,MAGFtE,GAEhB,OACI,kBAACuE,EAAA,EAAD,eACIC,sBAAuBlE,EAAQgE,aAC/BG,eAAa,EACbnE,QAAS,CACLJ,KAAMI,EAAQJ,KACdwD,WAAYpD,EAAQoD,WACpBQ,MAAO5D,EAAQ4D,MACfC,MAAO7D,EAAQ6D,MACfE,QAAS/D,EAAQ+D,UAEjB3C,I,qFC/CVnC,EAAQ,CACVmF,iBAAkB,CACdjF,MAAO,oBACPuB,MAAO,GACPC,OAAQ,GACRuB,QAAS,IAIImC,E,4MACjBpD,MAAQ,CACJX,SAAS,G,EAGbgE,YAAc,WACV,EAAKC,SAAS,CAAEjE,SAAS,K,EAG7BkE,WAAa,WACT,EAAKD,SAAS,CAAEjE,SAAS,K,uDAGnB,IAAD,OAmBL,OACI,kBAAC,IAAMoC,SAAP,KAlBI,EAAKzB,MAAMX,QAEP,kBAACmE,EAAA,EAAD,CAAY1B,QAAS,EAAKuB,aACtB,kBAAC,IAAD,CACIrF,MAAOA,EAAMmF,oBAMrB,kBAACK,EAAA,EAAD,CAAY1B,QAAS,EAAKyB,YACtB,kBAAC,IAAD,CAAuBvF,MAAOA,EAAMmF,oBAU5C,kBAAC,IAAD,CACI/D,IAAK,0BACLC,QAASoE,KAAKzD,MAAMX,QACpBC,UAAU,EACVE,MAAI,EACJC,MAAO,MACPC,OAAQ,a,GA1COgE,a,oCCL7BtF,EAAQC,YAAe,CACzB+B,UAAW,CACPC,eAAgB,CACZ,UAAW,CACP,IAAK,CACD,kBAAmB,QAEvB,uBAAwB,CACpBZ,MAAO,MACPC,OAAQ,WAKxBY,QAAS,CACLqD,YAAa,CAAEC,KAAM,UAEzBtF,WAAY,CACRmC,GAAI,CACAjC,WAAY,qCACZmC,SAAU,OAEdC,UAAW,CACPpC,WAAY,qCACZmC,SAAU,YAKhBlC,EAAYC,aAAW,SAACN,GAAD,MAAY,CACrCyF,MAAO,CACH3F,MAAO,QACPqC,WAAY,kBACZuD,aAAc,MACdC,SAAU,OACV9C,QAAS,WAIF,SAAS+C,IACpB,IAAMjF,EAAUN,IADW,EAGHwF,IAAM3C,UAAS,GAHZ,mBAGpB4C,EAHoB,KAGdC,EAHc,KAa3B,OACI,kBAAC,IAAD,CAAkB/F,MAAOA,GACrB,6BACI,kBAAC,IAAD,CACI0B,KAAK,SACL9B,MAAO,CAAEE,MAAO,SAChB4D,QAdG,WACfqC,GAAQ,MAeA,kBAACxC,EAAA,EAAD,MACA,kBAACyC,EAAA,EAAD,CAAQF,KAAMA,EAAMG,QAbZ,WAChBF,GAAQ,IAY0CG,GAAI,SAC1C,kBAACC,EAAA,EAAD,CAAOvF,UAAWD,EAAQ8E,OACtB,kBAAChC,EAAA,EAAD,CAAY3C,QAAQ,MAApB,kCAGA,kBAACwC,EAAA,EAAD,CAAKE,EAAG,IACR,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,aAChB,gGADJ,iqBAoBA,kBAACwC,EAAA,EAAD,CAAKE,EAAG,IACR,kBAACC,EAAA,EAAD,CAAY3C,QAAQ,aAChB,2BACI,2BACI,4DAGR,oKAKA,4HAIA,2BACI,sDAEJ,qIAKA,2BACI,kDADJ,0EAKA,2BACI,mEAEJ,sEACA,uKAhCJ,8F,YC9FT,SAASsF,KACpB,IAOMzF,EAPYL,aAAW,iBAAO,CAChC+F,OAAQ,CACJvG,MAAO,QACPyC,SAAU,UAIFlC,GAEhB,OACI,kBAACiG,EAAA,EAAD,CACI1F,UAAWD,EAAQ0F,OACnB3C,QAAS,kBACL6C,OAAOT,KAAK,kCAAmC,YAKnD,yBAAKU,MAAM,6BAA6BC,QAAQ,eAC5C,0BACIC,KAAK,OACLC,EAAE,uwL,8ECtBP,SAASC,KAAa,IAAD,EACC1D,oBAAS,GADV,mBACzBwB,EADyB,KAChBmC,EADgB,KAGhC,OACI,2BAAOjG,UAAS,iBAAY8D,EAAU,kBAAoB,KACtD,2BACIhD,KAAK,WACLoF,MAAOpC,EACPqC,SAAU,kBAAMF,GAAenC,MAGnC,yBAAK9D,UAAU,mBACf,2BAAOA,UAAU,gBAAjB,QACA,2BAAOA,UAAU,gBAAjB,S,cCibZ,IAIMW,GAAqB,CACvByF,eNxbG,SAAwBvF,GAC3B,MAAO,CAAEC,KAFmB,mBAEKD,UM0btBE,gBARS,SAACC,GAAD,MAAY,CAChCqF,aAAcrF,EAAMsF,oBAOgB3F,GAAzBI,EA5af,SAAcI,GACV,IAEMoF,EACK,UADLA,EAEQ,UAFRA,EAGI,UAHJA,EAIQ,UAJRA,EAKW,QAGXnH,EAAQC,YAAe,CACzBiC,QAAS,CACLqD,YAAa,CAAEC,KAAM,UAEzBtF,WAAY,CACRkH,GAAI,CACAhH,WAAY,qCACZmC,SAAU,QACVxC,WAAY,OAEhB4C,GAAI,CACAvC,WAAY,qCACZmC,SAAU,QACVxC,WAAY,OAEhBsH,GAAI,CACAjH,WAAY,yBACZmC,SAAU,SAEdG,QAAS,CACLtC,WAAY,yBACZmC,SAAU,UAKhBlC,EAAYC,aAAW,iBAAO,CAChCoE,QAAS,GACT4C,MAAO,CACH,YAAa,CACTxH,MAAO,SAIfyH,QAAS,CAAEC,WAAY,OACvBC,MAAO,CACHC,SAAU,GAEdC,OAAQ,CACJxF,WAAY,kBAEZrC,MAAO,QACP8H,WAAY5H,EAAM6H,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQ/H,EAAM6H,YAAYE,OAAOC,MACjCC,SAAUjI,EAAM6H,YAAYI,SAASC,iBAG7CC,gBAAiB,CACbrI,MAAO,oBACPsI,SAAU,QACVC,OAAQ,MACRC,MAAO,MACPC,OAAQ,MAGZC,YAAa,CACTJ,SAAU,QACVC,OAAQ,MACRI,KAAM,MACNF,OAAQ,GAGZG,UAAW,CACPrH,MAAO,GACPC,OAAQ,IAEZqH,YAAa,CACTtH,MAAM,eAAD,OA7EO,IA6EP,OACLuH,WA9EY,IA+EZhB,WAAY5H,EAAM6H,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQ/H,EAAM6H,YAAYE,OAAOc,QACjCZ,SAAUjI,EAAM6H,YAAYI,SAASa,kBAG7CC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJ5H,MAxFY,IAyFZ6H,WAAY,GAEhBC,YAAa,CACThH,WAAY,gBACZd,MA7FY,IA8FZC,OAAQ,YAIV8H,EAAe,SAACC,GAAgB,IAAD,EACjCrC,EAAe,eACRC,GADO,mBAEToC,GAAcpC,EAAaoC,IAFlB,+BAIOpC,EAAaoC,GAA2B,KAAbA,GAJlC,MAeZ1I,EAAUN,IAnHC,EAoHOwF,IAAM3C,UAAS,GApHtB,mBAoHV4C,EApHU,KAoHJC,EApHI,OAqHCF,IAAM3C,UAAS,GAA1BwB,EArHU,oBA+HTuC,EAAiClF,EAAjCkF,aAAcD,EAAmBjF,EAAnBiF,eAEtB,OACI,kBAAC,IAAM3D,SAAP,KAEI,kBAACE,EAAA,EAAD,MAEA,kBAAC,IAAD,CAAkBvD,MAAOA,GAOrB,kBAACsJ,EAAA,EAAD,CAAS7B,MAAM,iBAAiB8B,UAAU,OACtC,kBAACnE,EAAA,EAAD,CACIxE,UAAWD,EAAQwH,gBACnBrH,QAAQ,WACR4C,QAASoC,EAtBH,WACtBC,GAAQ,IALa,WACrBA,GAAQ,KA2BQ,kBAAC,IAAD,CAAcnF,UAAWD,EAAQ+H,cAGzC,yBAAK9H,UAAWD,EAAQ6H,aACpB,kBAACpC,GAAD,OAIJ,kBAACoD,GAAA,EAAD,CACI5I,UAAWD,EAAQsI,OACnBnI,QAAQ,aACR2I,OAAO,OACP3D,KAAMA,EACNnF,QAAS,CACL8E,MAAO9E,EAAQwI,cAGnB,kBAACO,EAAA,EAAD,CAAUC,QAAS,IAAKC,GAAIlF,GAGxB,kBAACmF,EAAA,EAAD,CAAQzB,SAAS,SAASxH,UAAWD,EAAQgH,QACzC,kBAACrE,EAAA,EAAD,CAAKE,EAAG,IACR,kBAACsG,GAAA,EAAD,KACI,kBAACrG,EAAA,EAAD,CAAY3C,QAAQ,MAApB,cAEJ,kBAACgJ,GAAA,EAAD,KACI,kBAACrG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,yBAIJ,kBAACwC,EAAA,EAAD,CAAKE,EAAG,IACR,kBAACsG,GAAA,EAAD,KACI,kBAACrG,EAAA,EAAD,CAAY3C,QAAQ,MAApB,qBAIJ,kBAACgJ,GAAA,EAAD,KASI,kBAAC,GAAD,CACIpF,QAASuC,EAAa8C,eACtBhD,SAAU,kBACNqC,EAAa,mBAEjBY,KAAK,oBAGb,kBAACF,GAAA,EAAD,KACI,kBAAC1E,EAAA,EAAD,KACI,kBAAC,EAAD,OAGJ,kBAAC3B,EAAA,EAAD,CAAY3C,QAAQ,WAApB,gBAIJ,kBAACgJ,GAAA,EAAD,KACI,kBAACrG,EAAA,EAAD,CAAY3C,QAAQ,MAApB,YAEJ,kBAACgJ,GAAA,EAAD,KACI,kBAAChG,EAAD,CACIY,QAASuC,EAAagD,iBACtBlD,SAAU,kBACNqC,EAAa,qBAEjBY,KAAK,qBAET,kBAACvG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,mBAIJ,kBAACgJ,GAAA,EAAD,KACI,kBAAChG,EAAD,CACIY,QAASuC,EAAaiD,gBACtBnD,SAAU,kBACNqC,EAAa,oBAEjBY,KAAK,oBAET,kBAACvG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,oBAIJ,kBAACqJ,GAAA,EAAD,MACA,kBAACL,GAAA,EAAD,KACI,kBAACrG,EAAA,EAAD,CAAY3C,QAAQ,MAApB,mBAIJ,kBAACgJ,GAAA,EAAD,KACI,kBAAChG,EAAD,CACIM,UAAW+C,EACXzC,QAASuC,EAAamD,MACtBrD,SAAU,kBAAMqC,EAAa,UAC7BY,KAAK,UAET,kBAACvG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,UAEJ,kBAACgJ,GAAA,EAAD,KACI,kBAAChG,EAAD,CACIM,UAAW+C,EACXzC,QAASuC,EAAaoD,kBACtBtD,SAAU,kBACNqC,EAAa,sBAEjBY,KAAK,sBAET,kBAACvG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,aAIJ,kBAACgJ,GAAA,EAAD,KACI,kBAACrG,EAAA,EAAD,CAAY3C,QAAQ,MAApB,aAEJ,kBAACgJ,GAAA,EAAD,KACI,kBAAChG,EAAD,CACIM,UAAW+C,EACXzC,QAASuC,EAAaqD,KACtBvD,SAAU,kBAAMqC,EAAa,SAC7BY,KAAK,SAET,kBAACvG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,SAEJ,kBAACgJ,GAAA,EAAD,KACI,kBAAChG,EAAD,CACIM,UAAW+C,EACXzC,QAASuC,EAAasD,SACtBxD,SAAU,kBAAMqC,EAAa,aAC7BY,KAAK,aAET,kBAACvG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,aAIJ,kBAACgJ,GAAA,EAAD,KACI,kBAAChG,EAAD,CACIM,UAAW+C,EACXzC,QAASuC,EAAauD,YACtBzD,SAAU,kBAAMqC,EAAa,gBAC7BY,KAAK,gBAET,kBAACvG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,gBAIJ,kBAACgJ,GAAA,EAAD,KACI,kBAACrG,EAAA,EAAD,CAAY3C,QAAQ,MAApB,iBAIJ,kBAACgJ,GAAA,EAAD,KACI,kBAACW,GAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,GAAA,EAAD,CACIC,aAAW,SACXZ,KAAK,SACLjD,SAxMhB,SAACpD,GACjBqD,EAAe,eACRC,EADO,CAEV4D,YAAalH,EAAEmH,OAAOhE,WAuMM,kBAACiE,GAAA,EAAD,CACIjE,MAAM,WACNkE,QACI,kBAACC,GAAA,EAAD,CACItK,QAAS,CACLJ,KAAMI,EAAQ2G,SAI1B4D,MACI,kBAACzH,EAAA,EAAD,CAAY3C,QAAQ,WAApB,qBAKR,kBAACiK,GAAA,EAAD,CACIjE,MAAM,SACNkE,QACI,kBAACC,GAAA,EAAD,CACItK,QAAS,CACLJ,KAAMI,EAAQ2G,SAI1B4D,MACI,kBAACzH,EAAA,EAAD,CAAY3C,QAAQ,WAApB,qCAKR,kBAACiK,GAAA,EAAD,CACIjE,MAAM,SACNkE,QACI,kBAACC,GAAA,EAAD,CACItK,QAAS,CACLJ,KAAMI,EAAQ2G,SAI1B4D,MACI,kBAACzH,EAAA,EAAD,CAAY3C,QAAQ,WAApB,0BAKR,kBAACiK,GAAA,EAAD,CACIjE,MAAM,WACNkE,QACI,kBAACC,GAAA,EAAD,CACItK,QAAS,CACLJ,KAAMI,EAAQ2G,SAI1B4D,MACI,kBAACzH,EAAA,EAAD,CAAY3C,QAAQ,WAApB,0BAMR,kBAACiK,GAAA,EAAD,CACIjE,MAAM,gBACNkE,QACI,kBAACC,GAAA,EAAD,CACItK,QAAS,CACLJ,KAAMI,EAAQ2G,SAI1B4D,MACI,kBAACzH,EAAA,EAAD,CAAY3C,QAAQ,WAApB,uBAQpB,kBAACgJ,GAAA,EAAD,KACI,kBAACrG,EAAA,EAAD,CAAY3C,QAAQ,MAApB,aAEJ,kBAACgJ,GAAA,EAAD,KACI,kBAAC,EAAD,MACA,kBAACrG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,mDAIJ,kBAACgJ,GAAA,EAAD,KACI,kBAAChG,EAAD,CACIY,QAASuC,EAAakE,QACtBpE,SAAU,kBAAMqC,EAAa,YAC7BY,KAAK,YAET,kBAACvG,EAAA,EAAD,CAAY3C,QAAQ,WAApB,sCAIJ,kBAACwC,EAAA,EAAD,CAAKE,EAAG,Y,sGCvZvB4H,GAAiB,SAACC,EAAQC,GACnC,IAAMC,EAAc,SAACF,EAAQC,GACzBD,EAAOG,UAAS,SAAUC,IAClBA,aAAiBC,SAAcD,aAAiBC,aAChDD,EAAME,QAAUL,OAKxBD,IACIC,GACAC,EAAYF,EAAQC,GACpBD,EAAOjD,SAASwD,EAAIP,EAAOjD,SAASwD,EAAI,EACxC,IAAIC,KAAMC,MAAMT,EAAOjD,UAClB2D,GACG,CACIH,EAAGP,EAAOjD,SAASwD,EAAI,GAE3B,KAEH7D,OAAO8D,KAAMG,OAAOC,UAAUC,KAC9BC,SAEL,IAAIN,KAAMC,MAAMT,EAAOjD,UAClB2D,GACG,CACIH,EAAGP,EAAOjD,SAASwD,EAAI,GAE3B,KAEH7D,OAAO8D,KAAMG,OAAOC,UAAUC,KAC9BC,QACAC,YAAW,WACRb,EAAYF,EAAQC,GACpBD,EAAOjD,SAASwD,EAAIP,EAAOjD,SAASwD,EAAI,OAM/CS,GAAsB,yCAAG,yCAAAC,EAAA,sEAKNC,GACxB,sCAN8B,cAK9BC,EAL8B,QAU9BC,EAAa,IAAIf,UACVgB,OAAO,EAAG,EAAG,IACpBC,EAAgB,IAAIjB,qBAAwB,CAC5C5L,MAAO2M,IAGPG,EAAmB,IAAIlB,qBAAwB,CAC/CmB,IAAKL,EACL1M,MAAO2M,IAIPK,EAAgB,CAChBH,EACAA,EACAC,EACAD,EACAA,EACAA,GAGJH,EAAgBO,UAAYrB,iBACtBsB,EAAU,IAAItB,qBAAwB,KAAM,GAAK,MAC/CuB,UAAU,EAAG,IAAM,IACrBC,EAAe,IAAIxB,QAAWsB,EAASF,IAChCK,YAAa,EAC1BD,EAAaE,eAAgB,EAC7BF,EAAalD,KAAO,eArCc,kBAuC3BkD,GAvC2B,4CAAH,qDA0CtBG,GAAiB,yCAAG,yCAAAf,EAAA,sEACDC,GACxB,qCAFyB,cACzBe,EADyB,gBAIFf,GACvB,qCALyB,cAIzBgB,EAJyB,QASzBd,EAAa,IAAIf,UACVgB,OAAO,EAAG,EAAG,KAEpBC,EAAgB,IAAIjB,wBAA2B,CAC/C1B,KAAM,gBACNlK,MAAO2M,EACPe,SAAU,CACNF,gBAAiBA,EACjBC,eAAgBA,GAEpBV,IAAKS,EACLG,UAAW,GACXC,UAAW,MAGDC,KAAOjC,cAGjBoB,EAAgB,EAChB,EACAH,GACA,GACA,EACAA,EACAA,GAGJW,EAAgBP,UAAYrB,iBACtBsB,EAAU,IAAItB,qBAAwB,KAAM,KAAM,OAChDuB,UAAU,EAAG,IAAK,IACpBW,EAAc,IAAIlC,QAAWsB,EAASF,IAEhCK,YAAa,EACzBS,EAAYR,eAAgB,EAC5BQ,EAAY5D,KAAO,aA3CU,kBA6CtB4D,GA7CsB,4CAAH,qDAgDjBC,GAAU,yCAAG,mCAAAvB,EAAA,6DAClBwB,EAAMC,KAAkBC,KACxBC,EAAS,IAAIvC,UACVgB,OAAO,EAAG,EAAG,IAChBwB,EAAc,IAAIxC,uBAA0B,CAC5C5L,MAAOmO,IALW,SAQJE,GAAcL,GARV,cAQlBM,EARkB,QAShBpE,KAAO,SACboE,EAAM5C,UAAS,SAAUC,GACrBA,EAAM4C,SAAWH,EACjBzC,EAAM6C,MAAMC,IAAI,IAAM,IAAM,KAC5B9C,EAAMrD,SAASmG,IAAI,EAAG,IAAM,GAC5B9C,EAAM0B,YAAa,KAdD,kBAgBfiB,GAhBe,4CAAH,qDAmBVI,GAAsB,yCAAG,iCAAAlC,EAAA,uDAC9BmC,EAAyB,IAAI/C,aACV1B,KAAO,yBAFI,KAAAsC,EAAA,iBAIvBoC,GAJuB,sBAAApC,EAAA,6DAK1BqC,EAAWZ,KAAyBW,GAAWZ,IAC/CrB,EAAasB,KAAyBW,GAAW5O,MACjD8O,EAAWb,KAAyBW,GAAWtG,SAC/CyG,EAAad,KAAyBW,GAAWJ,MARvB,SAUxBH,GAAcQ,GAAUG,MAAK,SAACV,GAChCK,EAAuBM,IAAIX,GAC3BA,EAAMpE,KAAO0E,EACbN,EAAME,MAAMC,IAAIM,EAAYA,EAAYA,GAExCT,EAAMY,SAAST,IAAI,EAAG,SAAW,GACjCH,EAAM5C,UAAS,SAAUC,GACrBA,EAAM4C,SAAW,IAAI3C,qBAAwB,CACzC5L,MAAO,IAAI4L,SAAY,MAAQe,KAEnChB,EAAMrD,SAASmG,IAAIK,EAAS,GAAIA,EAAS,GAAIA,EAAS,UApBhC,kDAAAtC,EAAA,KAIVyB,MAJU,oDAIvBW,EAJuB,6BAIvBA,GAJuB,8DAyB3BD,GAzB2B,4CAAH,qDAiCtBQ,GAAc,SAAC5N,EAAOC,EAAQ4N,EAAOC,EAAQC,GACtD,IAAIC,EAEe,IAFfA,EAGgB,EAHhBA,EAIa,GAEbC,EAAc,IAAIC,KAAWL,EAAOC,GACpCK,EAAY,IAAIC,KAChB,IAAI/D,WAAcrK,EAAOC,GACzB,EACA,GACA,KAEJkO,EAAUE,UAAYL,EACtBG,EAAUG,SAAWN,EACrBG,EAAUI,OAASP,EACnB,IAAIQ,EAAgB,IAAIC,KAAeV,GACvCS,EAAcE,gBAAiB,EAC/BF,EAAcG,QAAQV,GACtBO,EAAcG,QAAQR,GACtB,IAAIS,EAAY,IAAIC,KAChB,IAAIxE,kBAAqB,CACrByE,SAAU,CACNC,YAAa,CAAEtJ,MAAO,MACtBuJ,aAAc,CACVvJ,MAAO+I,EAAcS,cAAcC,UAG3CC,aAAcC,KAAWC,OACzBC,eAAgBF,KAAWG,OAE/B,eAEJX,EAAUY,WAAY,EACtB,IAAIC,EAAgB,IAAIhB,KAAeV,GAIvC,OAHA0B,EAAcd,QAAQV,GACtBwB,EAAcd,QAAQC,GAEf,CAAEJ,cAAeA,EAAeiB,cAAeA,IAqB7CC,GAAY,yCAAG,iCAAAzE,EAAA,sDAGxB,IAAW0E,KAFPC,EAAgB,IAAIvF,aACV1B,KAAO,gBAFG,WAGbgH,GACP,IAAIlD,EAAMC,KAAeiD,GAAUlD,IAEnCoD,MAAMpD,GACDgB,MAAK,SAACqC,GAAD,OAASA,EAAIC,UAClBtC,MAAK,SAACuC,GACH,IAAIC,EAAkBC,GAAYF,EAAWL,GAC7CM,EAAgBtH,KAAOgH,EAIvBM,EAAgBE,MAAQH,EACxBJ,EAAclC,IAAIuC,MAErBG,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,OAdf3D,KAAiB,EAA7BiD,GAHa,OAmBxBC,EAAcjC,SAAST,IAAI,EAAG,SAAW,GACzC0C,EAAc7I,SAASmG,KACK,IAAtBsD,KAAKC,IAAI,UAAoB,IAAO,KACtC,EACuB,IAAtBD,KAAKE,IAAI,UAAoB,IAAO,KAEzCd,EAAcjC,SAAST,IAAI,EAAG,SAAW,GAzBjB,kBA0BjB0C,GA1BiB,2CAAH,qDA6BnBM,GAAc,SAACC,EAAOR,GACxB,IACIlR,EAAQ,IAAI4L,SAChB5L,EAAM4M,OACFqB,KAAeiD,GAAUlR,MAAMkS,EAC/BjE,KAAeiD,GAAUlR,MAAMmS,EAC/BlE,KAAeiD,GAAUlR,MAAMoS,GAGnC,IACIC,GADa,IAAIzG,kBACO0G,KAAK,kCACjCD,EAAWpF,UAAYrB,gBAEvB,IADA,IAAI2G,EAAiB,IAAI3G,YAChB4G,EAAI,EAAGA,EAAId,EAAMe,OAAQD,IAAK,CACnC,IAAIE,EAAiB,IAAI9G,kBAAqB,CAC1CmB,IAAKsF,EACLM,aAAa,IAGbC,EAAS,IAAIhH,UAAa8G,GAC9BE,EAAOrE,SAASvO,MAAQA,EACxB4S,EAAOrE,SAASsE,SAAWjH,oBAC3BgH,EAAOrE,SAASoE,aAAc,EAC9BC,EAAOpE,MAAMC,IAtBL,aAuBRmE,EAAOtK,SAASmG,IAAI,EAAG,EAAG,GAC1B8D,EAAetD,IAAI2D,GAEvB,OAAOL,GAGEO,GAAgB,yCAAG,iCAAAtG,EAAA,sEACV6B,GAAcJ,MADJ,cACxBK,EADwB,QAGxB3B,EAAa,IAAIf,UACVgB,OAAO,EAAG,EAAG,IACpBC,EAAgB,IAAIjB,qBAAwB,CAC5C5L,MAAO2M,IAGX2B,EAAMpE,KAAO,YACboE,EAAME,MAAMC,IAAI,OAAU,OAAU,QACpCH,EAAMhG,SAASmG,KAAK,MAAQ,GAAK,GACjCH,EAAMY,SAAST,IAAI,EAAG,SAAW,GACjCH,EAAM5C,UAAS,SAAUC,GAErBA,EAAM4C,SAAW1B,KAfO,kBAkBrByB,GAlBqB,4CAAH,qDA0BhBD,GAAa,yCAAG,WAAOnN,GAAP,UAAAsL,EAAA,+EAClB,IAAIuG,SAAQ,SAACC,IAChB,IAAIC,MAAYX,KAAKpR,EAAK8R,MAC3BhE,MAAK,SAACkE,GACL,OAAOA,MAJc,2CAAH,sDAabzG,GAAY,yCAAG,WAAOvL,GAAP,UAAAsL,EAAA,+EACjB,IAAIuG,SAAQ,SAACC,IAChB,IAAIpH,kBAAsB0G,KAAKpR,EAAK8R,MACrChE,MAAK,SAACkE,GAEL,OADAA,EAAOjG,UAAYrB,gBACZsH,MALa,2CAAH,sDAenBvC,GAAW,WAwBb,MAAO,CAAEC,OAtBC,4KAsBwBE,KAZxB,+WAuBDqC,GAAY,yCAAG,WAAO7D,GAAP,gCAAA9C,EAAA,6DACpB4G,EAAU,GACVC,EAAU,GACVC,EAAO,8BAHa,SAKH7G,GAAa6G,EAAO,gBALjB,cAKpBC,EALoB,gBAMT9G,GAAa6G,EAAO,aANX,cAMpBE,EANoB,iBAOH/G,GAAa6G,EAAO,iBAPjB,eAOpBG,EAPoB,iBAQDhH,GAAa6G,EAAO,WARnB,eAQpBI,EARoB,OAUxBH,EAASI,WAAarE,EAASsE,aAAaC,mBAC5CN,EAASO,MAAQlI,kBACjB2H,EAASQ,MAAQnI,kBACjB2H,EAASS,OAAOvF,IAAI2E,EAASC,GAE7BK,EAAWC,WAAarE,EAASsE,aAAaC,mBAC9CH,EAAWI,MAAQlI,kBACnB8H,EAAWK,MAAQnI,kBACnB8H,EAAWM,OAAOvF,IAAI2E,EAASC,GAE/BG,EAAGG,WAAarE,EAASsE,aAAaC,mBACtCL,EAAGM,MAAQlI,kBACX8H,EAAWK,MAAQnI,kBACnB4H,EAAGQ,OAAOvF,IAAI2E,EAASC,GAEvBI,EAASxG,UAAYrB,gBAErB6H,EAASE,WAAarE,EAASsE,aAAaC,mBAC5CJ,EAASK,MAAQlI,kBACjB6H,EAASM,MAAQnI,kBACjB6H,EAASO,OAAOvF,IAAI2E,EAASC,GAEzB9E,EAAW,IAAI3C,wBAA2B,CAC1CqI,MAAOT,EACPU,eAAgB,EAChBlU,MAAO,SACP+M,IAAKwG,EACLY,aAAcZ,EACda,gBAAiBX,EACjBY,kBAAmB,GACnBC,UAAWZ,EACX/F,UAAW,EACXC,UAAW,KAEG,IACZ2G,EAAY,IAAI3I,QAClB,IAAIA,uBAFU,OAGd2C,IAEMjB,eAAgB,EAC1BiH,EAAUrF,SAASsF,GAAe,GAAXzC,KAAK0C,GAC5BF,EAAUjM,SAASwD,EAAI,EACvByI,EAAUjM,SAASoM,EAAI,EApDC,kBAsDjBH,GAtDiB,4CAAH,sD,qBCpYnBI,G,kDACF,WAAY1S,GAAQ,IAAD,8BACf,cAAMA,IA+BV2S,MAhCmB,wBAgCX,uBAAApI,EAAA,6DACJ,EAAKqI,aAAe,IAAIjJ,YADpB,KAEJ,EAAKkJ,cAFD,SAKUhC,KAAmB9D,MAAK,SAACV,GAAD,OAAW,EAAKc,MAAMH,IAAIX,MAL5D,mCAQUI,KAAyBM,MAAK,SAACV,GACjC,EAAKc,MAAMH,IAAIX,MATvB,oCAYU6E,GAAa,EAAK7D,UAAUN,MAAK,SAAC+F,GACpC,EAAK3F,MAAMH,IAAI8F,MAbvB,qCAgBUxI,KAAyByC,MAAK,SAAC5B,GAAD,OAChC,EAAKgC,MAAMH,IAAI7B,MAjBvB,qCAqBUG,KAAoByB,MAAK,SAACgG,GAAD,OAC3B,EAAK5F,MAAMH,IAAI+F,MAtBvB,qCAyBUjH,KAAaiB,MAAK,SAACd,GAAD,OAAS,EAAKkB,MAAMH,IAAIf,MAzBpD,qCA4BU+C,KAAejC,MAAK,SAACiG,GACvB,EAAKA,aAAeA,EACpB,EAAK7F,MAAMH,IAAI,EAAKgG,iBA9B5B,yBAGCjG,KAHD,8CAiCCA,KACG,EAAK5J,SAAS,CAAE8P,SAAS,IACzB,EAAKjT,MAAMkT,gBAAgB,EAAKrT,MAAMoT,SAEtC,EAAKE,sBArCT,4CAhCW,EA0EnBN,YA1EmB,wBA0EL,6BAAAtI,EAAA,sDACV,EAAK4C,MAAQ,IAAIxD,SACjB,EAAKwD,MAAMiG,UAEX,EAAKhG,OAAS,IAAIzD,qBACd,GACA,EAAKrK,MAAQ,EAAKC,OAClB,IACA,KAEJ,EAAK6N,OAAO/G,SAASoM,GAAK,EAC1B,EAAKrF,OAAO/G,SAASkM,EAAI,EACzB,EAAKnF,OAAO/G,SAASwD,EAAI,EAEzB,EAAK1K,SAAW,IAAIkU,KAAc,EAAKjG,OAAQ,EAAKkG,aACpD,EAAKnU,SAASoU,YAAc,EAC5B,EAAKpU,SAASqU,YAAc,GAC5B,EAAKpG,OAAOqG,OAAO,IAAI9J,WAAc,EAAG,KAAM,IAC9C,EAAKxK,SAAS4J,OAAOyD,IAAI,EAAG,GAAK,GAGjC,EAAKa,SAAW,IAAI1D,iBAAoB,CACpC+J,WAAW,EACXC,OAAO,IAGX,EAAKtG,SAAS+F,UACd,EAAK/F,SAASuG,cAAcpP,OAAOqP,kBACnC,EAAKxG,SAASyG,UAAUC,SAAU,EAClC,EAAK1G,SAAS2G,YAAcrK,uBAC5B,EAAK0D,SAAS4G,QAAQ,EAAK3U,MAAO,EAAKC,QACvC,EAAK+T,YAAYY,YAAY,EAAK7G,SAAS8G,YAM3C,EAAKC,YAAc,IAAIzK,cAAiB,SAAU,EAAG,GACrD,EAAKyK,YAAYnM,KAAO,aACxB,EAAKmM,YAAY/N,SAASmG,IAAI,EAAG,KAAM,IACvC,EAAK4H,YAAYC,UAAYrI,KAAgBsI,GAAGC,IAEhD,EAAKC,YAAc,IAAI7K,cAAiB,SAAU,EAAG,GACrD,EAAK6K,YAAYvM,KAAO,aACxB,EAAKuM,YAAYnO,SAASmG,IAAI,EAAG,IAAK,IACtC,EAAKgI,YAAYH,UAAYrI,KAAgByI,GAAGF,IAGhD,EAAKG,YAAc,IAAI/K,cAAiB,SAAU,EAAG,KACrD,EAAK+K,YAAYL,UAAYrI,KAAgB2I,OAAOJ,IACpD,EAAKG,YAAYzM,KAAO,cACxB,EAAKyM,YAAYrO,SAASmG,KAAK,EAAG,GAAI,GACtC,EAAKkI,YAAYtJ,YAAa,EAC9B,EAAKsJ,YAAYE,OAAO/G,OAAS,EAEjC,EAAKgH,UAAY,IAAIlL,cAAiB,MAAU,EAAG,KACnD,EAAKkL,UAAUR,UAAYrI,KAAgB8I,KAAKP,IAEhD,EAAKM,UAAU5M,KAAO,iBACtB,EAAK4M,UAAUxO,SAASmG,IAAI,EAAG,EAAG,GAClC,EAAKqI,UAAUzJ,YAAa,EAC5B,EAAKyJ,UAAUD,OAAO/G,OAAS,EAG/B,EAAKkH,cAAgB,IAAIpL,YACzB,EAAKoL,cAAc9M,KAAO,gBAC1B,EAAK8M,cAAc/H,IACf,EAAKoH,YACL,EAAKI,YACL,EAAKE,YACL,EAAKG,WAGT,EAAK1H,MAAMH,IAAI,EAAK+H,eAKhBC,EAAa9H,GACb,EAAK5N,MACL,EAAKC,OACL,EAAK4N,MACL,EAAKC,OACL,EAAKC,UAET,EAAKS,cAAgBkH,EAAWlH,cAChC,EAAKiB,cAAgBiG,EAAWjG,cAtFtB,4CA1EK,EAmKnBkG,eAAiB,WACb,IAAMC,EAAO,EAAKrV,MAAMsV,YACxB,EAAKnC,aAAaoC,SAASC,SAAQ,SAACC,GAChC,IAAK,IAAI/E,EAAI,EAAGA,EAAI+E,EAAY7F,MAAMe,OAAQD,IAC1C,GAAI+E,EAAY7F,MAAMc,GAAGc,KAAK6D,GAAO,CACjC,IAAIK,EAAMD,EAAY7F,MAAMc,GAAGc,KAAK6D,GACxBI,EAAYF,SAAS7E,GAC3BlK,SAASmG,IAAI+I,EAAI,GAAI,KAAOA,EAAI,QAKlD,EAAKpS,SAAS,CACVgS,YACI,EAAKtV,MAAMsV,YAAcnJ,KACnB,EAAKnM,MAAMsV,YAAc,EAAKtV,MAAM2V,SACpC,KAnLC,EAuLnBC,mBAAqB,WACjB,IAAMnW,EAAQ,EAAKgU,YAAYoC,YACzBnW,EAAS,EAAK+T,YAAYqC,aAChC,EAAKtI,SAAS4G,QAAQ3U,EAAOC,GAE7B,EAAKuO,cAAcmG,QAAQ3U,EAAOC,GAClC,EAAKwP,cAAckF,QAAQ3U,EAAOC,GAElC,EAAK6N,OAAOwI,OAAStW,EAAQC,EAC7B,EAAK6N,OAAOyI,0BAhMG,EAuMnBC,WAAa,SAACC,GACNA,IAAc,EAAK/V,OAAQ,WAAD,MAWtB,EAAKA,MAAMgW,gBATXhO,EAFsB,EAEtBA,eACAK,EAHsB,EAGtBA,MACAC,EAJsB,EAItBA,kBACAC,EALsB,EAKtBA,KACAC,EANsB,EAMtBA,SACAC,EAPsB,EAOtBA,YACAW,EARsB,EAQtBA,QACAjB,EATsB,EAStBA,gBACAD,EAVsB,EAUtBA,iBAGA+N,EAAkB,EAAK9I,MAAM+I,gBAAgB,aAG7CC,EAAmB,EAAKhJ,MAAM+I,gBAC9B,oBAEAE,EAAkB,EAAKjJ,MAAM+I,gBAAgB,mBAC7CG,EAA2B,EAAKlJ,MAAM+I,gBACtC,4BAEAI,EAA0B,EAAKnJ,MAAM+I,gBACrC,2BAEAK,EAAoB,EAAKpJ,MAAM+I,gBAC/B,qBAEAM,EAAmB,EAAKrJ,MAAM+I,gBAC9B,oBAEAO,EAAe,EAAKtJ,MAAM+I,gBAAgB,gBAC1CQ,EAAc,EAAKvJ,MAAM+I,gBAAgB,eACzCS,EAAkB,EAAKxJ,MAAM+I,gBAAgB,mBAC7CU,EAAiB,EAAKzJ,MAAM+I,gBAAgB,kBAC5CW,EAAa,EAAK1J,MAAM+I,gBAAgB,cAE5C,IAAK,IAAMY,KAAgBf,EAAUC,gBACjC,GACID,EAAUC,gBAAgBc,KAC1B,EAAK9W,MAAMgW,gBAAgBc,GAE3B,OAAQA,GACJ,IAAK,iBACc,CAAC,EAAKjC,UAAW,EAAKH,aAE9BW,SAAQ,SAAC0B,GACZ,IAAIjN,KAAMC,MAAMgN,EAAU1Q,UACrB2D,GACG,CACIuI,GAAIwE,EAAU1Q,SAASkM,EACvBE,GAAIsE,EAAU1Q,SAASoM,GAE3B,KAEHzM,OAAO8D,KAAMG,OAAOC,UAAUC,KAC9B6M,UAAS,eACT5M,WAGTf,GAAeoN,EAAcpO,GAC7BgB,GACIqN,EACA1O,GAAkBK,GAGtBgB,GAAesN,EAAiBrO,GAChCe,GACIuN,EACA5O,GAAkBM,GAGtBe,GACI8M,GACCnO,GAAkBO,GAEvBc,GACI+M,EACApO,GAAkBO,GAGtBc,GACIkN,GACCvO,GAAkBQ,GAEvBa,GACImN,EACAxO,GAAkBQ,GAGtBa,GACIgN,GACCrO,GAAkBS,GAEvBY,GACIiN,EACAtO,GAAkBS,GAKtB,IAAIqB,KAAMC,MAAM8M,EAAW5J,UACtBjD,GACG,CACIuI,EAAG,EACH1I,EAAG7B,GAAkB,QAAU,QAC/ByK,EAAG,GAEP,KAEHzM,OAAO8D,KAAMG,OAAOgN,MAAMC,OAC1B9M,QACA+M,SAAQ,WACLN,EAAWvK,SAAS+I,SAAQ,SAAC/I,GACrBA,IACAA,EAASxB,IAAM9C,EACTsE,EAASb,SACJD,eACLc,EAASb,SACJF,gBACXe,EAASxB,IAAIsM,aAAc,SAK3C,MAEJ,IAAK,mBACD/N,GAAewN,EAAY3O,GAC3B,MAEJ,IAAK,QACDmB,GAAeoN,EAAcpO,GAC7BgB,GACIqN,EACA1O,GAAkBK,GAEtB,MAEJ,IAAK,oBACDgB,GAAesN,EAAiBrO,GAChCe,GACIuN,EACA5O,GAAkBM,GAEtB,MAEJ,IAAK,OACDe,GACI8M,GACCnO,GAAkBO,GAEvBc,GACI+M,EACApO,GAAkBO,GAEtB,MAEJ,IAAK,WACDc,GACIkN,GACCvO,GAAkBQ,GAEvBa,GACImN,EACAxO,GAAkBQ,GAEtB,MAEJ,IAAK,cACDa,GACIgN,GACCrO,GAAkBS,GAEvBY,GACIiN,EACAtO,GAAkBS,GAEtB,MAEJ,IAAK,UAID,EAAKtF,SAAS,CAAEkK,SAAUjE,IAErBA,GAWD,EAAKyL,UAAUR,UACXrI,KAAgB8I,KAAKuC,KACzB,EAAK3C,YAAYL,UACbrI,KAAgB2I,OAAO0C,KAC3B,EAAKjD,YAAYC,UACbrI,KAAgBsI,GAAG+C,KACvB,EAAK7C,YAAYH,UACbrI,KAAgByI,GAAG4C,OAjBvB,EAAKxC,UAAUR,UACXrI,KAAgB8I,KAAKP,IACzB,EAAKG,YAAYL,UACbrI,KAAgB2I,OAAOJ,IAC3B,EAAKH,YAAYC,UACbrI,KAAgBsI,GAAGC,IACvB,EAAKC,YAAYH,UACbrI,KAAgByI,GAAGF,KAY3B,MAEJ,IAAK,kBAKGlL,GAAe4M,IAJd9N,GAML,MAEJ,IAAK,cACD,IAAImP,EAAe,EAAKtX,MAAMgW,gBACzBlN,YAGL,GAFA8G,QAAQ2H,IAAID,GAES,kBAAjBA,EACA,OACI,WACJ,IAAIE,EACAxL,KAA+BsL,GAC1BG,OACLtH,EACAnE,KAA+BsL,GAC1B7D,OACLiE,EAAY,IAAI/N,WAChBwG,EAAE,GACFA,EAAE,GACFA,EAAE,IAGN,IAAIrG,KAAMC,MAAM,EAAKqD,OAAO/G,UACvB2D,GACG,CACIuI,EAAGiF,EAAU,GACb3N,EAAG2N,EAAU,GACb/E,EAAG+E,EAAU,IAEjB,KAEHxR,OAAO8D,KAAMG,OAAOC,UAAUC,KAC9B6M,UAAS,WACN,EAAK5J,OAAOqG,OAAOiE,MAEtBtN,QA1BD,IAjOG,IAxMhB,EAkdnBuN,gBAAkB,WACV,EAAK9X,MAAMwN,UACX,EAAKS,cAAc8J,SACnB,EAAK7I,cAAc6I,UAEnB,EAAKvK,SAASuK,OAAO,EAAKzK,MAAO,EAAKC,SAvd3B,EA2dnByK,aAAe,WACoC,kBAA3C,EAAK7X,MAAMgW,gBAAgBlN,aAC3B,EAAKgP,OAAS,EAAKC,YACnB,EAAK3K,OAAO/G,SAASkM,EACjB,EAAK1E,OAASiC,KAAKE,IAAIrG,aAAgBqO,SAAS,EAAKF,QACzD,EAAK1K,OAAO/G,SAASwD,EAAI,IACzB,EAAKuD,OAAO/G,SAASoM,EACjB,EAAK5E,OAASiC,KAAKC,IAAIpG,aAAgBqO,SAAS,EAAKF,QACzD,EAAK1K,OAAOqG,OAAO,IAAI9J,WAAc,EAAG,KAAM,IAC9C,EAAKyD,OAAO6K,qBDjQI,SAAC7K,GACzB,GAAIA,EAAQ,CACR,IAAI3L,EAAI2L,EAAO/G,SACX5E,EAAEoI,EAAI,KAAKpI,EAAEoI,EAAI,IACjBpI,EAAEoI,EAAI,IAAGpI,EAAEoI,EAAI,ICiQfqO,CAAa,EAAK9K,SAxeP,EA4enB+F,mBAAqB,WACjB,EAAK0E,eAGL/N,KAAMqO,SAEN,EAAKlD,iBAGL,EAAK0C,kBAEL,EAAKS,UAAY5T,OAAO6T,sBAAsB,EAAKlF,qBArfnD,EAAKtT,MAAQ,CACToT,SAAS,EACTkC,YAAa,EACbK,SAAU,EACV/F,MAAO,GACPpC,UAAU,EACViL,MAAM,EACNC,UAAW,IAAI5O,WAAc,EAAG,KAAM,IAE1C,EAAKmO,MAAQ,EACb,EAAKC,YAAc,GACnB,EAAKlK,OAAS,IAbC,E,gEAgBE,IAAD,OAEhBvK,KAAKhE,MAAQgE,KAAKgQ,YAAYoC,YAC9BpS,KAAK/D,OAAS+D,KAAKgQ,YAAYqC,aAC/BnR,OAAOgU,iBAAiB,SAAUlV,KAAKmS,oBAEvCgD,YAAW,WACP,EAAK9F,UACN,O,6CAIHnO,OAAOkU,qBAAqBpV,KAAK8U,WACjC5T,OAAOmU,oBAAoB,SAAUrV,KAAKmS,sB,yCAsK3BM,GACfzS,KAAKwS,WAAWC,K,iCAsTTnU,GACP,IAAIgX,EAAQ,IAAIjP,WACZkP,EAAM,IAAIlP,aAEdiP,EAAMrG,EAAK3Q,EAAEkX,QAAUxV,KAAKhE,MAAS,EAAI,EACzCsZ,EAAM/O,GAAMjI,EAAEmX,QAAUzV,KAAK/D,OAAU,EAAI,EAC3CsZ,EAAIG,cAAcJ,EAAMK,QAAS3V,KAAK8J,QAEtC,IAAI8L,EAAUL,EAAIM,iBAAiB7V,KAAK6J,MAAMiI,UAC9C,GAAI8D,EAAQ,IAAMA,EAAQ,GAAGE,MAAO,CAChCxJ,QAAQ2H,IAAI2B,EAAQ,GAAG5P,QACvB,IAAI+P,EAASH,EAAQ,GAAGE,MACxB9V,KAAKnE,SAAS4J,OAAOyD,IAAI6M,GACzB/V,KAAKnE,SAASgZ,Y,+BAIZ,IAAD,OACDmB,EAEAhW,KAAKtD,MAAMoB,WAEf,OACI,kBAAC,IAAME,SAAP,KACI,yBACIzD,MACIyb,EACM,CACI/Z,OAAQ,OACR8G,SAAU,QACV/G,MAAO,OACPia,IAAK,EACL7S,KAAM,EACNtE,gBAAiB,QACjBoX,WAAY,IAEhB,CACIja,OAAQ,OACRD,MAAO,OACP+G,SAAU,QAEVkT,IAAK,EACL7S,KAAM,EACNtE,gBAAiB,QACjBoX,WAAY,UAG1BC,IAAK,SAACC,GAAD,OAAU,EAAKpG,YAAcoG,U,GA1iB7BnW,aAujBnB/D,GAAqB,CACvB0T,gBRplBG,SAAyBxT,GAC5B,MAAO,CAAEC,KAFoB,oBAEKD,UQslBvBE,gBAVS,SAACC,GACrB,MAAO,CACHuB,WAAYvB,EAAM8Z,eAQcna,GAAzBI,CAA6C8S,ICtlBtDkH,G,uKAEE,OACI,kBAAC,IAAMtY,SAAP,KACI,kBAAC,GAAD,CAAY0U,gBAAiB1S,KAAKtD,MAAMgW,kBACvC1S,KAAKtD,MAAM6Z,SAAW,kBAAC,GAAD,MAAW,KAElC,kBAAC,EAAD,W,GAPEtW,aA2CH3D,gBAPS,SAACC,GACrB,MAAO,CACHmW,gBAAiBnW,EAAMsF,iBACvB0U,SAAUha,EAAM8Z,eAIgB,KAAzB/Z,CAA+Bga,IC1C/BE,GAJS,SAAC,GAAD,IAAG1E,EAAH,EAAGA,SAAU2E,EAAb,EAAaA,MAAb,OACpB,kBAAC,IAAD,CAAUA,MAAOA,GAAQ3E,I,SCSd4E,GANM,CACjBja,SAAS,EACT4Z,aAAa,EACbxU,iBAAkB6G,MCAP,SAASiO,KAAuC,IAA/Bpa,EAA8B,uDAAtBma,GAAcE,EAAQ,uCAC1D,OAAQA,EAAOva,MACX,IZRyB,oBYSrB,OAAO,eAAKE,EAAZ,CAAmBE,QAASma,EAAOxa,OACvC,IZLuB,kBYMnB,OAAO,eAAKG,EAAZ,CAAmB8Z,YAAaO,EAAOxa,OAC3C,IZFwB,mBYGpB,OAAO,eAAKG,EAAZ,CAAmBsF,iBAAkB+U,EAAOxa,OAChD,QACI,OAAOG,GChBnB,IAAMsa,GACF3V,OAAO4V,8BACP5V,OAAO4V,+BCCLL,GDCiB,WAWnB,OAVcM,aAAYJ,GAASE,ICFzBG,GAER9b,GAAO+b,SAASC,eAAe,QAE1BC,IAAS7C,OACZ,kBAAC8C,GAAD,CAAUX,MAAOA,IACb,kBAAC,GAAD,OAGJvb,K","file":"static/js/main.6b8bb701.chunk.js","sourcesContent":["import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default function LoadingSprite() {\n    return (\n        <div>\n            <CircularProgress\n                style={{\n                    borderColor: \"#fff\",\n                    color: \"white\",\n                    fontWeight: \"bolder\",\n                }}\n            />\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    typography: {\n        button: {\n            fontFamily: '\"Open Sans\", \"sans-serif\"',\n        },\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \"& > *\": {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nexport default function EnterButton() {\n    const classes = useStyles();\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <Button\n                    style={{\n                        borderColor: \"#fff\",\n                        color: \"white\",\n                        fontWeight: \"bolder\",\n                    }}\n                    variant=\"outlined\"\n                >\n                    Enter CityScope\n                </Button>\n            </div>\n        </MuiThemeProvider>\n    );\n}\n","import React from \"react\";\nimport \"./Video.css\";\nimport ReactPlayer from \"react-player\";\n\n// https://medium.com/@kevinsimper/full-width-youtube-embed-with-react-js-responsive-embed-509de7e7c3bf\n\nconst Video = () => {\n    return (\n        <div className=\"video-background\">\n            <div className=\"video-foreground\">\n                <ReactPlayer\n                    url={\"https://vimeo.com/390936231\"}\n                    playing={true}\n                    controls={false}\n                    muted\n                    loop\n                    width={\"0em\"}\n                    height={\"0em\"}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Video;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { connect } from \"react-redux\";\nimport \"./LandingPage.css\";\nimport LoadingSprite from \"../LandingPage/LoadingSprite\";\nimport EnterButton from \"../LandingPage/EnterButton\";\nimport Box from \"@material-ui/core/Box\";\nimport Video from \"./Video\";\nimport { setStartSceneState } from \"../../redux/actions\";\n\nfunction LandingPage(props) {\n    const theme = createMuiTheme({\n        overrides: {\n            MuiCssBaseline: {\n                \"@global\": {\n                    \"*\": {\n                        \"scrollbar-width\": \"thin\",\n                    },\n                    \"*::-webkit-scrollbar\": {\n                        width: \"4px\",\n                        height: \"4px\",\n                    },\n                },\n            },\n        },\n        palette: {\n            background: {\n                default: \"black\",\n            },\n            color: {\n                default: \"#fff\",\n            },\n        },\n        typography: {\n            h2: {\n                fontFamily: [\"Cormorant Garamond\", \"cursive\"].join(\",\"),\n                fontWeight: 400,\n                fontSize: \"5em\",\n            },\n            subtitle1: {\n                fontFamily: '\"Cormorant Garamond\", \"sans-serif\"',\n                fontWeight: 300,\n                fontSize: \"1.5em\",\n            },\n            subtitle2: {\n                fontFamily: '\"Cormorant Garamond\", \"sans-serif\"',\n            },\n            caption: {\n                fontFamily: '\"Cormorant Garamond\", \"sans-serif\"',\n                fontSize: \"1em\",\n            },\n            h6: {\n                fontFamily: [\"Cormorant Garamond\", \"cursive\"].join(\",\"),\n            },\n        },\n    });\n\n    const useStyles = makeStyles((theme) => ({\n        box: {\n            background: \"none\",\n            color: \"#fff\",\n            padding: theme.spacing(3),\n            [theme.breakpoints.down(\"sm\")]: {\n                maxWidth: \"90vw\",\n            },\n            [theme.breakpoints.up(\"md\")]: {\n                maxWidth: \"70vw\",\n            },\n            [theme.breakpoints.up(\"lg\")]: {\n                maxWidth: \"60vw\",\n            },\n\n            textAlign: \"center\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxHeight: \"100vh\",\n            overflow: \"auto\",\n        },\n    }));\n\n    const [startScene, setStartScene] = useState(false);\n\n    function _enterButtonEvent(e) {\n        e.preventDefault();\n        // hook\n        setStartScene(true);\n        // redux the start\n        props.setStartSceneState(true);\n    }\n\n    const classes = useStyles();\n\n    if (!startScene) {\n        return (\n            <React.Fragment>\n                <MuiThemeProvider theme={theme}>\n                    <Box className={classes.box}>\n                        <CssBaseline />\n                        <Box p={1.5}></Box>\n                        <Typography variant=\"h2\">CITYSCOPE</Typography>\n                        <Typography variant=\"h2\">Champs-Élysées </Typography>\n                        <Box p={2}></Box>\n                        {props.readyState ? (\n                            <LoadingSprite />\n                        ) : (\n                            <div onClick={_enterButtonEvent}>\n                                <EnterButton />\n                            </div>\n                        )}\n                        <Box p={3}>\n                            <Typography variant=\"subtitle1\">\n                                CityScope Champs-Élysées is a Tangible User\n                                Interface for urban planning and\n                                decision-making. It was designed and installed\n                                as part of an exhibition in the Pavillon de\n                                l'Arsenal, Paris. Composed by PCA-STREAM, this\n                                exhibition explored new plans and future\n                                interventions for Champs Élysées Avenue. These\n                                include reduced traffic, encouraged walkability,\n                                cycling and pedestrian movement, as well as\n                                improved access to cultural landmarks and\n                                amenities along the Avenue. Due to COVID-19, we\n                                have decided to move this exhibition online.\n                                This website allows users to explore MIT\n                                CityScope Champs-Élysées in an interactive and\n                                immersive way.\n                            </Typography>\n                        </Box>\n                        <Box p={3} />\n                        <Typography variant=\"h6\">\n                            Exhabition in Pavillon de l'Arsenal\n                        </Typography>\n                        <Box p={1} />\n                        <div>\n                            <div>\n                                <Typography variant=\"caption\">\n                                    PCA-STREAM\n                                </Typography>\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                <Typography variant=\"caption\">\n                                    MIT City Science\n                                </Typography>\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                <Typography variant=\"caption\">GAMA</Typography>\n                            </div>\n                        </div>\n\n                        <Box p={3} />\n                        <Typography variant=\"h6\">\n                            Virtual Champs-Élysées\n                        </Typography>\n                        <Box p={0.5} />\n                        <Typography variant=\"caption\">\n                            Ariel Noyman, Arnaud Grignard, Nicolas Ayoub, Luis\n                            Alonso, Kent Larson\n                        </Typography>\n                        <Box p={2} />\n                    </Box>\n                </MuiThemeProvider>\n                <Video youtubeId={\"MVhauHKiEPA\"} />\n            </React.Fragment>\n        );\n    } else {\n        return null;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        readyState: state.LOADING,\n    };\n};\n\nconst mapDispatchToProps = {\n    setStartSceneState: setStartSceneState,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);\n","/**\n * ACTIONS\n */\n\nexport const SET_LOADING_STATE = \"SET_LOADING_STATE\";\nexport function setLoadingState(data) {\n    return { type: SET_LOADING_STATE, data };\n}\n\nexport const SET_START_STATE = \"SET_START_SCENE\";\nexport function setStartSceneState(data) {\n    return { type: SET_START_STATE, data };\n}\n\nexport const MENU_INTERACTION = \"MENU_INTERACTION\";\nexport function listenToMenuUI(data) {\n    return { type: MENU_INTERACTION, data };\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport function CSSwitch(props) {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: 30,\n            height: 12,\n            padding: 0,\n            margin: theme.spacing(1),\n        },\n        switchBase: {\n            padding: 1,\n            \"&$checked\": {\n                transform: \"translateX(16px)\",\n                color: theme.palette.common.white,\n                \"& + $track\": {\n                    backgroundColor: props.knobcolor || \"#888\",\n                    opacity: 1,\n                },\n            },\n            \"&$focusVisible $thumb\": {\n                color: \"#888\",\n                border: \"1px solid #FFF\",\n            },\n        },\n        thumb: {\n            width: 10,\n            height: 10,\n        },\n        track: {\n            borderRadius: 30 / 2,\n            backgroundColor: \"#FFF3\",\n            opacity: 1,\n        },\n        checked: {},\n        focusVisible: {},\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n}\n","import React, { Component } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport { IconButton } from \"@material-ui/core\";\n\nconst style = {\n    audioIconWrapper: {\n        color: \"rgba(255,255,255)\",\n        width: 30,\n        height: 30,\n        padding: 0,\n    },\n};\n\nexport default class Audio extends Component {\n    state = {\n        playing: false,\n    };\n\n    handlePause = () => {\n        this.setState({ playing: false });\n    };\n\n    handlePlay = () => {\n        this.setState({ playing: true });\n    };\n\n    render() {\n        const iconSelector = () => {\n            if (this.state.playing) {\n                return (\n                    <IconButton onClick={this.handlePause}>\n                        <PauseCircleOutlineIcon\n                            style={style.audioIconWrapper}\n                        />\n                    </IconButton>\n                );\n            } else {\n                return (\n                    <IconButton onClick={this.handlePlay}>\n                        <PlayCircleOutlineIcon style={style.audioIconWrapper} />\n                    </IconButton>\n                );\n            }\n        };\n\n        return (\n            <React.Fragment>\n                {iconSelector()}\n\n                <ReactPlayer\n                    url={\"resources/audio/ace.mp3\"}\n                    playing={this.state.playing}\n                    controls={false}\n                    loop\n                    width={\"0em\"}\n                    height={\"0em\"}\n                />\n            </React.Fragment>\n        );\n    }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Paper } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiCssBaseline: {\n            \"@global\": {\n                \"*\": {\n                    \"scrollbar-width\": \"thin\",\n                },\n                \"*::-webkit-scrollbar\": {\n                    width: \"5px\",\n                    height: \"10px\",\n                },\n            },\n        },\n    },\n    palette: {\n        textPrimary: { main: \"white\" },\n    },\n    typography: {\n        h2: {\n            fontFamily: '\"Cormorant Garamond\", \"sans-serif\"',\n            fontSize: \"3em\",\n        },\n        subtitle1: {\n            fontFamily: '\"Cormorant Garamond\", \"sans-serif\"',\n            fontSize: \"1.5em\",\n        },\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        color: \"white\",\n        background: \"rgba(0,0,0,0.9)\",\n        marginBottom: \"0em\",\n        overflow: \"auto\",\n        padding: \"3em\",\n    },\n}));\n\nexport default function Info() {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <div>\n                <InfoIcon\n                    type=\"button\"\n                    style={{ color: \"white\" }}\n                    onClick={handleOpen}\n                />\n                <CssBaseline />\n                <Dialog open={open} onClose={handleClose} id={\"modal\"}>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h2\">\n                            CityScope Champs-Élysées\n                        </Typography>\n                        <Box p={3} />\n                        <Typography variant=\"subtitle1\">\n                            <p>\n                                A collaboration between PCA-STREAM and MIT Media\n                                Lab City Science\n                            </p>\n                            CityScope Champs-Élysée is a Tangible User Interface\n                            for urban planning and decision-making, that was\n                            installed as part of an exhibition in Pavillon de\n                            l'Arsenal, Paris. The exhibition by PCA-STREAM,\n                            explored new plans and future interventions for\n                            Champs Élysées Boulevard. These include reduced\n                            traffic, encouraged walkability, cycling and\n                            pedestrian movement in the famous street. As well,\n                            the project suggested improved access to cultural\n                            landmarks and amenities along the Boulevard. Due to\n                            COVID19, we have decided to move this exhibition\n                            online. This website allow users to explore MIT\n                            CityScope Champs-Élysée in an interactive and\n                            immersive way.\n                        </Typography>\n                        <Box p={3} />\n                        <Typography variant=\"subtitle1\">\n                            <p>\n                                <b>\n                                    <u>CityScope Champs-Elysées</u>\n                                </b>\n                            </p>\n                            <p>\n                                CityScope is developed by City Science - MIT\n                                Media Lab www.media.mit.edu/groups/city-science\n                                github.com/CityScope/cityscope.github.io\n                            </p>\n                            <p>\n                                Gama Platform is developed by the l’IRD/UMMISCO\n                                and its partners gama-platform.github.io\n                            </p>\n                            <p>\n                                <b>MIT City Science Team:</b>\n                            </p>\n                            <p>\n                                Arnaud Grignard, Nicolas Ayoub, Luis Alonso,\n                                Ariel Noyman, Markus Elkatsha, Maggie Church,\n                                Kent Larson\n                            </p>\n                            <p>\n                                <b>Gama Platform Team:</b>\n                                Tri Nguyen-Huu (IRD), Patrick Taillandier\n                                (INRA), Alexis Drogoul (IRD)\n                            </p>\n                            <b>\n                                <u>Virtual CityScope Champs-Elysées</u>\n                            </b>\n                            <p>Developed by MIT Media Lab City Science</p>\n                            <p>\n                                Virtual Champs Elysées is a virtual\n                                representation of the physical CityScope\n                                Champs-Elysées deployed at the Pavillon de\n                                l'Arsenal.\n                            </p>\n                            Ariel Noyman, Arnaud Grignard, Nicolas Ayoub, Luis\n                            Alonso, Tri Nguyen-Huu, Kent Larson\n                        </Typography>\n                    </Paper>\n                </Dialog>\n            </div>\n        </MuiThemeProvider>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\nexport default function Logo() {\n    const useStyles = makeStyles(() => ({\n        CSlogo: {\n            color: \"white\",\n            fontSize: \"4em\",\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <SvgIcon\n            className={classes.CSlogo}\n            onClick={() =>\n                window.open(\"http://cityscope.media.mit.edu/\", \"_blank\")\n            }\n\n            // window.open(\"http://cityscope.media.mit.edu/\")}\n        >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 120 120\">\n                <path\n                    fill=\"#FFF\"\n                    d=\"M 60.2 38.4 c -0.5 0 -1 -0.1 -1.5 -0.3 c -0.4 -0.2 -0.8 -0.4 -1.1 -0.7 c -0.3 -0.3 -0.6 -0.7 -0.7 -1.1 c -0.2 -0.4 -0.3 -0.9 -0.3 -1.4 c 0 -0.5 0.1 -1 0.2 -1.4 c 0.2 -0.4 0.4 -0.8 0.7 -1.1 c 0.3 -0.3 0.7 -0.6 1.1 -0.7 c 0.4 -0.2 0.9 -0.3 1.4 -0.3 c 0.5 0 0.9 0.1 1.2 0.2 c 0.4 0.1 0.7 0.3 1 0.5 c 0.3 0.2 0.5 0.5 0.7 0.8 c 0.2 0.3 0.3 0.7 0.3 1 h -2.1 c -0.1 -0.3 -0.2 -0.5 -0.4 -0.7 c -0.2 -0.2 -0.4 -0.3 -0.7 -0.3 c -0.5 0 -0.8 0.2 -1 0.5 c -0.2 0.4 -0.3 0.8 -0.3 1.4 c 0 0.6 0.1 1.1 0.3 1.4 c 0.2 0.3 0.6 0.5 1 0.5 c 0.7 0 1.1 -0.4 1.2 -1.2 h 2 c 0 0.4 -0.1 0.7 -0.3 1.1 c -0.2 0.3 -0.4 0.6 -0.6 0.9 c -0.3 0.2 -0.6 0.4 -1 0.6 C 61.1 38.4 60.6 38.4 60.2 38.4 Z M 64 28.8 h 2.1 v 1.7 H 64 V 28.8 Z M 64 31.5 h 2.1 v 6.7 H 64 V 31.5 Z M 69.9 38.3 c -0.3 0 -0.6 0 -0.9 -0.1 c -0.3 -0.1 -0.5 -0.2 -0.7 -0.3 c -0.2 -0.1 -0.3 -0.3 -0.4 -0.6 c -0.1 -0.2 -0.2 -0.5 -0.2 -0.9 v -3.6 h -0.9 v -1.3 h 0.9 v -2.1 h 2.1 v 2.1 H 71 v 1.3 h -1.2 V 36 c 0 0.3 0.1 0.4 0.2 0.5 c 0.1 0.1 0.3 0.1 0.5 0.1 c 0.1 0 0.2 0 0.3 0 c 0.1 0 0.2 0 0.2 0 v 1.6 c -0.1 0 -0.2 0.1 -0.4 0.1 C 70.4 38.3 70.2 38.3 69.9 38.3 Z M 72.2 38.8 H 73 c 0.3 0 0.5 -0.1 0.7 -0.2 c 0.1 -0.1 0.2 -0.3 0.2 -0.5 c 0 -0.1 0 -0.3 -0.1 -0.5 c -0.1 -0.2 -0.2 -0.5 -0.3 -0.9 l -2 -5.2 h 2.3 l 0.9 2.9 c 0.1 0.2 0.1 0.3 0.2 0.5 c 0 0.2 0.1 0.3 0.1 0.5 c 0 0.2 0.1 0.3 0.1 0.5 h 0 c 0 -0.2 0.1 -0.3 0.1 -0.5 c 0 -0.1 0.1 -0.3 0.1 -0.5 c 0 -0.2 0.1 -0.4 0.2 -0.5 l 0.9 -2.9 h 2.1 l -2.3 6.8 c -0.1 0.4 -0.3 0.7 -0.4 1 c -0.2 0.3 -0.3 0.5 -0.5 0.7 c -0.2 0.2 -0.4 0.3 -0.7 0.4 c -0.3 0.1 -0.6 0.1 -0.9 0.1 h -1.4 V 38.8 Z M 59.8 50 c -1 0 -1.8 -0.2 -2.3 -0.6 c -0.6 -0.4 -0.9 -1 -0.9 -1.8 h 2 c 0 0.3 0.2 0.6 0.4 0.7 c 0.2 0.2 0.5 0.2 0.9 0.2 c 0.3 0 0.6 -0.1 0.8 -0.2 c 0.2 -0.1 0.3 -0.3 0.3 -0.5 c 0 -0.1 0 -0.3 -0.1 -0.4 c -0.1 -0.1 -0.2 -0.2 -0.4 -0.2 c -0.2 -0.1 -0.3 -0.1 -0.5 -0.1 c -0.2 0 -0.4 -0.1 -0.6 -0.1 c -0.3 -0.1 -0.6 -0.1 -0.9 -0.2 c -0.3 -0.1 -0.5 -0.2 -0.8 -0.3 c -0.2 -0.1 -0.4 -0.3 -0.6 -0.6 c -0.1 -0.2 -0.2 -0.6 -0.2 -1 c 0 -0.3 0.1 -0.7 0.2 -0.9 c 0.2 -0.3 0.4 -0.5 0.6 -0.7 c 0.3 -0.2 0.6 -0.3 0.9 -0.4 c 0.4 -0.1 0.7 -0.1 1.1 -0.1 c 1 0 1.7 0.2 2.2 0.6 c 0.5 0.4 0.8 0.9 0.8 1.6 h -2 c 0 -0.3 -0.2 -0.5 -0.3 -0.6 c -0.2 -0.1 -0.4 -0.2 -0.7 -0.2 c -0.3 0 -0.5 0 -0.7 0.2 c -0.2 0.1 -0.3 0.3 -0.3 0.5 c 0 0.1 0 0.2 0.1 0.3 c 0.1 0.1 0.2 0.1 0.4 0.2 c 0.1 0 0.3 0.1 0.5 0.1 c 0.2 0 0.4 0.1 0.6 0.1 c 0.3 0.1 0.6 0.1 0.9 0.2 c 0.3 0.1 0.6 0.2 0.8 0.3 c 0.2 0.2 0.5 0.4 0.6 0.6 c 0.2 0.3 0.2 0.6 0.2 1 c 0 0.4 -0.1 0.7 -0.2 1 c -0.2 0.3 -0.4 0.5 -0.6 0.7 c -0.3 0.2 -0.6 0.3 -1 0.4 C 60.6 50 60.2 50 59.8 50 Z M 66.8 50 c -0.5 0 -1 -0.1 -1.5 -0.3 c -0.4 -0.2 -0.8 -0.4 -1.1 -0.7 c -0.3 -0.3 -0.6 -0.7 -0.7 -1.1 c -0.2 -0.4 -0.3 -0.9 -0.3 -1.4 c 0 -0.5 0.1 -1 0.2 -1.4 c 0.2 -0.4 0.4 -0.8 0.7 -1.1 c 0.3 -0.3 0.7 -0.6 1.1 -0.7 c 0.4 -0.2 0.9 -0.3 1.4 -0.3 c 0.5 0 0.9 0.1 1.2 0.2 c 0.4 0.1 0.7 0.3 1 0.5 c 0.3 0.2 0.5 0.5 0.7 0.8 c 0.2 0.3 0.3 0.7 0.3 1 h -2.1 c -0.1 -0.3 -0.2 -0.5 -0.4 -0.7 c -0.2 -0.2 -0.4 -0.3 -0.7 -0.3 c -0.5 0 -0.8 0.2 -1 0.5 c -0.2 0.4 -0.3 0.8 -0.3 1.4 c 0 0.6 0.1 1.1 0.3 1.4 c 0.2 0.3 0.6 0.5 1 0.5 c 0.7 0 1.1 -0.4 1.2 -1.2 h 2 c 0 0.4 -0.1 0.7 -0.3 1.1 c -0.2 0.3 -0.4 0.6 -0.6 0.9 c -0.3 0.2 -0.6 0.4 -1 0.6 C 67.8 49.9 67.3 50 66.8 50 Z M 70.7 40.4 h 2.1 v 1.7 h -2.1 V 40.4 Z M 70.7 43.1 h 2.1 v 6.7 h -2.1 V 43.1 Z M 77.2 50 c -0.6 0 -1 -0.1 -1.5 -0.3 c -0.4 -0.2 -0.8 -0.4 -1.1 -0.7 c -0.3 -0.3 -0.5 -0.7 -0.7 -1.1 c -0.2 -0.4 -0.2 -0.9 -0.2 -1.4 c 0 -0.5 0.1 -1 0.2 -1.4 s 0.4 -0.8 0.7 -1.1 c 0.3 -0.3 0.7 -0.6 1.1 -0.7 c 0.4 -0.2 0.9 -0.3 1.4 -0.3 c 0.5 0 0.9 0.1 1.3 0.2 c 0.4 0.1 0.7 0.4 1 0.6 c 0.4 0.4 0.7 0.8 0.9 1.4 c 0.2 0.6 0.3 1.2 0.3 1.9 h -4.8 c 0.1 0.5 0.2 0.8 0.5 1.1 c 0.2 0.3 0.6 0.4 1 0.4 c 0.3 0 0.5 -0.1 0.7 -0.2 c 0.2 -0.1 0.3 -0.3 0.4 -0.5 h 2.1 c -0.1 0.3 -0.2 0.6 -0.4 0.9 c -0.2 0.3 -0.4 0.5 -0.7 0.7 c -0.3 0.2 -0.6 0.4 -0.9 0.5 C 78 49.9 77.6 50 77.2 50 Z M 78.3 45.7 c 0 -0.4 -0.2 -0.7 -0.4 -1 c -0.2 -0.2 -0.5 -0.4 -0.9 -0.4 c -0.4 0 -0.7 0.1 -0.9 0.4 c -0.2 0.2 -0.4 0.6 -0.4 1 H 78.3 Z M 81.2 43.1 h 2.1 V 44 h 0 c 0.3 -0.4 0.5 -0.6 0.9 -0.8 c 0.3 -0.2 0.7 -0.3 1.2 -0.3 c 0.4 0 0.7 0.1 1 0.2 c 0.3 0.1 0.5 0.3 0.7 0.5 c 0.2 0.2 0.4 0.5 0.5 0.8 c 0.1 0.3 0.2 0.7 0.2 1 v 4.4 h -2.1 v -3.9 c 0 -0.4 -0.1 -0.6 -0.3 -0.9 c -0.2 -0.2 -0.4 -0.3 -0.8 -0.3 c -0.4 0 -0.6 0.1 -0.9 0.4 c -0.2 0.3 -0.3 0.6 -0.3 1 v 3.7 h -2.1 V 43.1 Z M 92 50 c -0.5 0 -1 -0.1 -1.5 -0.3 c -0.4 -0.2 -0.8 -0.4 -1.1 -0.7 c -0.3 -0.3 -0.6 -0.7 -0.7 -1.1 c -0.2 -0.4 -0.3 -0.9 -0.3 -1.4 c 0 -0.5 0.1 -1 0.2 -1.4 c 0.2 -0.4 0.4 -0.8 0.7 -1.1 c 0.3 -0.3 0.7 -0.6 1.1 -0.7 c 0.4 -0.2 0.9 -0.3 1.4 -0.3 c 0.5 0 0.9 0.1 1.2 0.2 c 0.4 0.1 0.7 0.3 1 0.5 c 0.3 0.2 0.5 0.5 0.7 0.8 c 0.2 0.3 0.3 0.7 0.3 1 h -2.1 c -0.1 -0.3 -0.2 -0.5 -0.4 -0.7 c -0.2 -0.2 -0.4 -0.3 -0.7 -0.3 c -0.5 0 -0.8 0.2 -1 0.5 c -0.2 0.4 -0.3 0.8 -0.3 1.4 c 0 0.6 0.1 1.1 0.3 1.4 c 0.2 0.3 0.6 0.5 1 0.5 c 0.7 0 1.1 -0.4 1.2 -1.2 h 2 c 0 0.4 -0.1 0.7 -0.3 1.1 c -0.2 0.3 -0.4 0.6 -0.6 0.9 c -0.3 0.2 -0.6 0.4 -1 0.6 C 92.9 49.9 92.4 50 92 50 Z M 99.1 50 c -0.6 0 -1 -0.1 -1.5 -0.3 c -0.4 -0.2 -0.8 -0.4 -1.1 -0.7 c -0.3 -0.3 -0.5 -0.7 -0.7 -1.1 c -0.2 -0.4 -0.2 -0.9 -0.2 -1.4 c 0 -0.5 0.1 -1 0.2 -1.4 s 0.4 -0.8 0.7 -1.1 c 0.3 -0.3 0.7 -0.6 1.1 -0.7 c 0.4 -0.2 0.9 -0.3 1.4 -0.3 c 0.5 0 0.9 0.1 1.3 0.2 c 0.4 0.1 0.7 0.4 1 0.6 c 0.4 0.4 0.7 0.8 0.9 1.4 c 0.2 0.6 0.3 1.2 0.3 1.9 h -4.8 c 0.1 0.5 0.2 0.8 0.5 1.1 c 0.2 0.3 0.6 0.4 1 0.4 c 0.3 0 0.5 -0.1 0.7 -0.2 c 0.2 -0.1 0.3 -0.3 0.4 -0.5 h 2.1 c -0.1 0.3 -0.2 0.6 -0.4 0.9 c -0.2 0.3 -0.4 0.5 -0.7 0.7 c -0.3 0.2 -0.6 0.4 -0.9 0.5 C 99.9 49.9 99.6 50 99.1 50 Z M 100.3 45.7 c 0 -0.4 -0.2 -0.7 -0.4 -1 c -0.2 -0.2 -0.5 -0.4 -0.9 -0.4 c -0.4 0 -0.7 0.1 -0.9 0.4 c -0.2 0.2 -0.4 0.6 -0.4 1 H 100.3 Z M 0 49.9 L 0 0 M 0 0 v 49.8 h 21.3 v -7.1 H 7.1 V 7.1 h 42.7 V 0 L 0 0 Z M 14.2 14.2 v 21.3 h 28.5 v 7.1 H 28.5 v 7.1 h 21.3 V 28.5 H 21.3 v -7.1 h 28.5 v -7.1 H 14.2 Z\"\n                />\n            </svg>\n        </SvgIcon>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport \"./BigSwitch.scss\";\n\nexport default function BigSwitch() {\n    const [checked, updateChecked] = useState(false);\n\n    return (\n        <label className={`Toggle ${checked ? \"Toggle--checked\" : \"\"}`}>\n            <input\n                type=\"checkbox\"\n                value={checked}\n                onChange={() => updateChecked(!checked)}\n            />\n\n            <div className=\"Toggle__slider\" />\n            <small className=\"Toggle__text\">2020</small>\n            <small className=\"Toggle__text\">2040</small>\n        </label>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CSSwitch } from \"./CSSwitch\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\nimport { listenToMenuUI } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Audio from \"../Audio\";\nimport Info from \"./Info\";\nimport Logo from \"./Logo\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport OverlayMertics from \"./OverlayMertics/OverlayMertics\";\nimport Box from \"@material-ui/core/Box\";\nimport BigSwitch from \"./BigSwitch/BigSwitch\";\n\nimport Divider from \"@material-ui/core/Divider\";\n\n// ! https://github.com/mui-org/material-ui/issues/9290\n\nfunction Menu(props) {\n    const drawerWidth = 300;\n\n    const switchColors = {\n        parks: \"#84ff03\",\n        cultural: \"#fe01fe\",\n        cars: \"#fc0303\",\n        bicycles: \"#03bafc\",\n        pedestrians: \"#FFF7\",\n    };\n\n    const theme = createMuiTheme({\n        palette: {\n            textPrimary: { main: \"white\" },\n        },\n        typography: {\n            h5: {\n                fontFamily: '\"Cormorant Garamond\", \"sans-serif\"',\n                fontSize: \"2.5em\",\n                fontWeight: \"300\",\n            },\n            h6: {\n                fontFamily: '\"Cormorant Garamond\", \"sans-serif\"',\n                fontSize: \"1.6em\",\n                fontWeight: \"400\",\n            },\n            h3: {\n                fontFamily: '\"Roboto\", \"sans-serif\"',\n                fontSize: \"1.5em\",\n            },\n            caption: {\n                fontFamily: '\"Roboto\", \"sans-serif\"',\n                fontSize: \"1em\",\n            },\n        },\n    });\n\n    const useStyles = makeStyles(() => ({\n        checked: {},\n        radio: {\n            \"&$checked\": {\n                color: \"#fff\",\n            },\n        },\n\n        toolBar: { alignItems: \"end\" },\n        title: {\n            flexGrow: 2,\n        },\n        appBar: {\n            background: \"rgba(0,0,0,0.7)\",\n\n            color: \"white\",\n            transition: theme.transitions.create([\"margin\", \"width\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        menuIconWrapper: {\n            color: \"rgba(255,255,255)\",\n            position: \"fixed\",\n            bottom: \"1em\",\n            right: \"1em\",\n            zIndex: 9999,\n        },\n\n        LogoWrapper: {\n            position: \"fixed\",\n            bottom: \"1em\",\n            left: \"1em\",\n            zIndex: 1,\n        },\n\n        largeIcon: {\n            width: 40,\n            height: 40,\n        },\n        appBarShift: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            transition: theme.transitions.create([\"margin\", \"width\"], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        hide: {\n            display: \"none\",\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            background: \"rgba(0,0,0,0)\",\n            width: drawerWidth,\n            height: \"100%\",\n        },\n    }));\n\n    const handleToggle = (toggleName) => {\n        listenToMenuUI({\n            ...toggleStates,\n            [toggleName]: !toggleStates[toggleName],\n            // add only toggle name if it was turned on\n            thisToggleName: !toggleStates[toggleName] ? toggleName : null,\n        });\n    };\n\n    const cameraRadio = (e) => {\n        listenToMenuUI({\n            ...toggleStates,\n            cameraScene: e.target.value,\n        });\n    };\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const [checked] = React.useState(true);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const { toggleStates, listenToMenuUI } = props;\n\n    return (\n        <React.Fragment>\n            {/*  */}\n            <CssBaseline />\n            {/*  */}\n            <MuiThemeProvider theme={theme}>\n                {/*  */}\n                {/* <OverlayMertics\n                    thisToggleName={toggleStates.thisToggleName}\n                    scenarioSwitch={toggleStates.scenarioSwitch}\n                /> */}\n                {/*  */}\n                <Tooltip title=\"Toggle Options\" placement=\"top\">\n                    <IconButton\n                        className={classes.menuIconWrapper}\n                        variant=\"outlined\"\n                        onClick={open ? handleDrawerClose : handleDrawerOpen}\n                    >\n                        <MenuOpenIcon className={classes.largeIcon} />\n                    </IconButton>\n                </Tooltip>\n                <div className={classes.LogoWrapper}>\n                    <Logo />\n                </div>\n                {/*  */}\n\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <Collapse timeout={500} in={checked}>\n                        {/*  */}\n\n                        <AppBar position=\"static\" className={classes.appBar}>\n                            <Box p={1} />\n                            <ListItem>\n                                <Typography variant=\"h5\">CityScope</Typography>\n                            </ListItem>\n                            <ListItem>\n                                <Typography variant=\"caption\">\n                                    Champs-Élysées\n                                </Typography>\n                            </ListItem>\n                            <Box p={1} />\n                            <ListItem>\n                                <Typography variant=\"h6\">\n                                    present & future\n                                </Typography>\n                            </ListItem>\n                            <ListItem>\n                                {/* <CSSwitch\n                                    checked={toggleStates.scenarioSwitch}\n                                    onChange={() =>\n                                        handleToggle(\"scenarioSwitch\")\n                                    }\n                                    name=\"scenarioSwitch\"\n                                /> */}\n\n                                <BigSwitch\n                                    checked={toggleStates.scenarioSwitch}\n                                    onChange={() =>\n                                        handleToggle(\"scenarioSwitch\")\n                                    }\n                                    name=\"scenarioSwitch\"\n                                ></BigSwitch>\n                            </ListItem>\n                            <ListItem>\n                                <IconButton>\n                                    <Info />\n                                </IconButton>\n\n                                <Typography variant=\"caption\">\n                                    information\n                                </Typography>\n                            </ListItem>\n                            <ListItem>\n                                <Typography variant=\"h6\">display</Typography>\n                            </ListItem>\n                            <ListItem>\n                                <CSSwitch\n                                    checked={toggleStates.metricsObjSwitch}\n                                    onChange={() =>\n                                        handleToggle(\"metricsObjSwitch\")\n                                    }\n                                    name=\"metricsObjSwitch\"\n                                />\n                                <Typography variant=\"caption\">\n                                    design metrics\n                                </Typography>\n                            </ListItem>\n                            <ListItem>\n                                <CSSwitch\n                                    checked={toggleStates.cityModelSwitch}\n                                    onChange={() =>\n                                        handleToggle(\"cityModelSwitch\")\n                                    }\n                                    name=\"cityModelSwitch\"\n                                />\n                                <Typography variant=\"caption\">\n                                    toggle 3D model\n                                </Typography>\n                            </ListItem>\n                            <Divider />\n                            <ListItem>\n                                <Typography variant=\"h6\">\n                                    spatial design\n                                </Typography>\n                            </ListItem>\n                            <ListItem>\n                                <CSSwitch\n                                    knobcolor={switchColors.parks}\n                                    checked={toggleStates.parks}\n                                    onChange={() => handleToggle(\"parks\")}\n                                    name=\"parks\"\n                                />\n                                <Typography variant=\"caption\">parks</Typography>\n                            </ListItem>\n                            <ListItem>\n                                <CSSwitch\n                                    knobcolor={switchColors.cultural}\n                                    checked={toggleStates.culturalBuildings}\n                                    onChange={() =>\n                                        handleToggle(\"culturalBuildings\")\n                                    }\n                                    name=\"culturalBuildings\"\n                                />\n                                <Typography variant=\"caption\">\n                                    cultural\n                                </Typography>\n                            </ListItem>\n                            <ListItem>\n                                <Typography variant=\"h6\">mobility</Typography>\n                            </ListItem>\n                            <ListItem>\n                                <CSSwitch\n                                    knobcolor={switchColors.cars}\n                                    checked={toggleStates.cars}\n                                    onChange={() => handleToggle(\"cars\")}\n                                    name=\"cars\"\n                                />\n                                <Typography variant=\"caption\">cars</Typography>\n                            </ListItem>\n                            <ListItem>\n                                <CSSwitch\n                                    knobcolor={switchColors.bicycles}\n                                    checked={toggleStates.bicycles}\n                                    onChange={() => handleToggle(\"bicycles\")}\n                                    name=\"bicycles\"\n                                />\n                                <Typography variant=\"caption\">\n                                    bicycles\n                                </Typography>\n                            </ListItem>\n                            <ListItem>\n                                <CSSwitch\n                                    knobcolor={switchColors.pedestrians}\n                                    checked={toggleStates.pedestrians}\n                                    onChange={() => handleToggle(\"pedestrians\")}\n                                    name=\"pedestrians\"\n                                />\n                                <Typography variant=\"caption\">\n                                    pedestrians\n                                </Typography>\n                            </ListItem>\n                            <ListItem>\n                                <Typography variant=\"h6\">\n                                    select scene\n                                </Typography>\n                            </ListItem>\n                            <ListItem>\n                                <FormControl component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"camera\"\n                                        name=\"camera\"\n                                        onChange={cameraRadio}\n                                    >\n                                        <FormControlLabel\n                                            value=\"Triomphe\"\n                                            control={\n                                                <Radio\n                                                    classes={{\n                                                        root: classes.radio,\n                                                    }}\n                                                />\n                                            }\n                                            label={\n                                                <Typography variant=\"caption\">\n                                                    Arc de Triomphe\n                                                </Typography>\n                                            }\n                                        />\n                                        <FormControlLabel\n                                            value=\"Champs\"\n                                            control={\n                                                <Radio\n                                                    classes={{\n                                                        root: classes.radio,\n                                                    }}\n                                                />\n                                            }\n                                            label={\n                                                <Typography variant=\"caption\">\n                                                    Avenue des Champs-Élysées\n                                                </Typography>\n                                            }\n                                        />\n                                        <FormControlLabel\n                                            value=\"Palais\"\n                                            control={\n                                                <Radio\n                                                    classes={{\n                                                        root: classes.radio,\n                                                    }}\n                                                />\n                                            }\n                                            label={\n                                                <Typography variant=\"caption\">\n                                                    Grand & Petit Palais\n                                                </Typography>\n                                            }\n                                        />\n                                        <FormControlLabel\n                                            value=\"Concorde\"\n                                            control={\n                                                <Radio\n                                                    classes={{\n                                                        root: classes.radio,\n                                                    }}\n                                                />\n                                            }\n                                            label={\n                                                <Typography variant=\"caption\">\n                                                    Place de la Concorde\n                                                </Typography>\n                                            }\n                                        />\n\n                                        <FormControlLabel\n                                            value=\"animateCamera\"\n                                            control={\n                                                <Radio\n                                                    classes={{\n                                                        root: classes.radio,\n                                                    }}\n                                                />\n                                            }\n                                            label={\n                                                <Typography variant=\"caption\">\n                                                    Animate Camera\n                                                </Typography>\n                                            }\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </ListItem>\n                            <ListItem>\n                                <Typography variant=\"h6\">settings</Typography>\n                            </ListItem>\n                            <ListItem>\n                                <Audio />\n                                <Typography variant=\"caption\">\n                                    \"Aux Champs Elysées\" by Arthur Des Ligneris\n                                </Typography>\n                            </ListItem>\n                            <ListItem>\n                                <CSSwitch\n                                    checked={toggleStates.quality}\n                                    onChange={() => handleToggle(\"quality\")}\n                                    name=\"quality\"\n                                />\n                                <Typography variant=\"caption\">\n                                    render quality (for fast devices)\n                                </Typography>\n                            </ListItem>\n                            <Box p={5} />\n                        </AppBar>\n                    </Collapse>\n                    {/*  */}\n                </Drawer>\n\n                {/*  */}\n            </MuiThemeProvider>\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    toggleStates: state.MENU_INTERACTION,\n});\n\nconst mapDispatchToProps = {\n    listenToMenuUI: listenToMenuUI,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n","import * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass.js\";\nimport * as settings from \"../../settings.json\";\nimport TWEEN from \"@tweenjs/tween.js\";\n\n/**\n *\n * @param {*}  object THREEjs obj\n * three-way display control\n * \n * \n * \n *        \n *  new TWEEN.Tween(object.position)\n            .to(\n                {\n                    y: object.position.y ,\n                },\n                1000\n            )\n            .easing(TWEEN.Easing.Quadratic.Out)\n            .start()\n            .onComplete(() =>\n\n\n */\n\nexport const _objectDisplay = (object, bool) => {\n    const _visability = (object, bool) => {\n        object.traverse(function (child) {\n            if (child instanceof THREE.Mesh || child instanceof THREE.Sprite) {\n                child.visible = bool;\n            }\n        });\n    };\n\n    if (object) {\n        if (bool) {\n            _visability(object, bool);\n            object.position.y = object.position.y + 1;\n            new TWEEN.Tween(object.position)\n                .to(\n                    {\n                        y: object.position.y - 1,\n                    },\n                    1000\n                )\n                .easing(TWEEN.Easing.Quadratic.Out)\n                .start();\n        } else {\n            new TWEEN.Tween(object.position)\n                .to(\n                    {\n                        y: object.position.y + 1,\n                    },\n                    1000\n                )\n                .easing(TWEEN.Easing.Quadratic.Out)\n                .start()\n                .onComplete(() => {\n                    _visability(object, bool);\n                    object.position.y = object.position.y - 1;\n                });\n        }\n    }\n};\n\nexport const _addCustomSceneObjects = async () => {\n    /**\n     * The model pedestal\n     */\n\n    var pedestalTexture = await _loadTexture(\n        \"./resources/textures/shadowmap.png\"\n    );\n\n    // pedestal  model material\n    let modelColor = new THREE.Color();\n    modelColor.setHSL(0, 0, 0.5);\n    let modelMaterial = new THREE.MeshPhongMaterial({\n        color: modelColor,\n    });\n\n    var topModelMaterial = new THREE.MeshPhongMaterial({\n        map: pedestalTexture,\n        color: modelColor,\n    });\n\n    // 6 sides material for pedestal\n    let materialArray = [\n        modelMaterial,\n        modelMaterial,\n        topModelMaterial,\n        modelMaterial,\n        modelMaterial,\n        modelMaterial,\n    ];\n    // fix scaling issue\n    pedestalTexture.minFilter = THREE.LinearFilter;\n    const cubeGeo = new THREE.BoxBufferGeometry(1.57, 0.7, 0.92);\n    cubeGeo.translate(0, 0.35, 0);\n    const pedestalMesh = new THREE.Mesh(cubeGeo, materialArray);\n    pedestalMesh.castShadow = true;\n    pedestalMesh.receiveShadow = true;\n    pedestalMesh.name = \"pedestalMesh\";\n\n    return pedestalMesh;\n};\n\nexport const _addMetricsObject = async () => {\n    var radarBeforeText = await _loadTexture(\n        \"./resources/textures/radar/rb.jpg\"\n    );\n    var radarAfterText = await _loadTexture(\n        \"./resources/textures/radar/ra.jpg\"\n    );\n\n    // pedestal  model material\n    let modelColor = new THREE.Color();\n    modelColor.setHSL(0, 0, 0.5);\n\n    var modelMaterial = new THREE.MeshStandardMaterial({\n        name: \"radarMaterial\",\n        color: modelColor,\n        userData: {\n            radarBeforeText: radarBeforeText,\n            radarAfterText: radarAfterText,\n        },\n        map: radarBeforeText,\n        metalness: 0.2,\n        roughness: 10,\n    });\n\n    modelMaterial.side = THREE.DoubleSide;\n\n    // 6 sides material for pedestal\n    let materialArray = [\n        false,\n        modelMaterial,\n        false,\n        false,\n        modelMaterial,\n        modelMaterial,\n    ];\n    // fix scaling issue\n    radarBeforeText.minFilter = THREE.LinearFilter;\n    const cubeGeo = new THREE.BoxBufferGeometry(1.57, 1.57, 0.002);\n    cubeGeo.translate(0, 1.8, 0);\n    const metricsMesh = new THREE.Mesh(cubeGeo, materialArray);\n\n    metricsMesh.castShadow = false;\n    metricsMesh.receiveShadow = false;\n    metricsMesh.name = \"metricsObj\";\n\n    return metricsMesh;\n};\n\nexport const _pplLoader = async () => {\n    let URL = settings.pplModel.ppl;\n    let pplCol = new THREE.Color();\n    pplCol.setHSL(0, 0, 0.2);\n    let pplMaterial = new THREE.MeshLambertMaterial({\n        color: pplCol,\n    });\n    // load other models\n    let model = await _loadOBJmodel(URL);\n    model.name = \"people\";\n    model.traverse(function (child) {\n        child.material = pplMaterial;\n        child.scale.set(0.95, 0.95, 0.95);\n        child.position.set(0, 0.01, 0);\n        child.castShadow = true;\n    });\n    return model;\n};\n\nexport const _landscapeModelsLoader = async () => {\n    let landscapeModelsWrapper = new THREE.Object3D();\n    landscapeModelsWrapper.name = \"landscapeModelsWrapper\";\n\n    for (const modelName in settings.landscapeModels) {\n        let modelURL = settings.landscapeModels[modelName].URL;\n        let modelColor = settings.landscapeModels[modelName].color;\n        let modelPos = settings.landscapeModels[modelName].position;\n        let modelscale = settings.landscapeModels[modelName].scale;\n        // load other models\n        await _loadOBJmodel(modelURL).then((model) => {\n            landscapeModelsWrapper.add(model);\n            model.name = modelName;\n            model.scale.set(modelscale, modelscale, modelscale);\n\n            model.rotation.set(0, 0.4625123, 0);\n            model.traverse(function (child) {\n                child.material = new THREE.MeshPhongMaterial({\n                    color: new THREE.Color(\"hsl\" + modelColor),\n                });\n                child.position.set(modelPos[0], modelPos[1], modelPos[2]);\n            });\n        });\n    }\n\n    return landscapeModelsWrapper;\n};\n\n/**\n *\n * @param {} camera\n */\n\nexport const _setupBloom = (width, height, scene, camera, renderer) => {\n    var params = {\n        exposure: 1,\n        bloomStrength: 0.45,\n        bloomThreshold: 0,\n        bloomRadius: 0.1,\n    };\n    var renderScene = new RenderPass(scene, camera);\n    var bloomPass = new UnrealBloomPass(\n        new THREE.Vector2(width, height),\n        1,\n        0.4,\n        0.85\n    );\n    bloomPass.threshold = params.bloomThreshold;\n    bloomPass.strength = params.bloomStrength;\n    bloomPass.radius = params.bloomRadius;\n    let bloomComposer = new EffectComposer(renderer);\n    bloomComposer.renderToScreen = false;\n    bloomComposer.addPass(renderScene);\n    bloomComposer.addPass(bloomPass);\n    var finalPass = new ShaderPass(\n        new THREE.ShaderMaterial({\n            uniforms: {\n                baseTexture: { value: null },\n                bloomTexture: {\n                    value: bloomComposer.renderTarget2.texture,\n                },\n            },\n            vertexShader: _shaders().vertex,\n            fragmentShader: _shaders().frag,\n        }),\n        \"baseTexture\"\n    );\n    finalPass.needsSwap = true;\n    let finalComposer = new EffectComposer(renderer);\n    finalComposer.addPass(renderScene);\n    finalComposer.addPass(finalPass);\n\n    return { bloomComposer: bloomComposer, finalComposer: finalComposer };\n};\n\n/**\n *\n * @param {\n * } trips\n */\n\nexport const _blockCamera = (camera) => {\n    if (camera) {\n        let p = camera.position;\n        if (p.y < 0.3) p.y = 0.3;\n        if (p.y > 4) p.y = 4;\n    }\n};\n\n/***\n *\n *\n */\nexport const _setupAgents = async () => {\n    let agentsWrapper = new THREE.Object3D();\n    agentsWrapper.name = \"agentsWrapper\";\n    for (const tripName in settings.trips) {\n        let URL = settings.trips[tripName].URL;\n\n        fetch(URL)\n            .then((res) => res.json())\n            .then((tripsData) => {\n                let thisTripsAgents = _makeAgents(tripsData, tripName);\n                thisTripsAgents.name = tripName;\n                // adds a record of the trips to the\n                // THREEE obj so we can run anim from inside\n                // this oject itself\n                thisTripsAgents.trips = tripsData;\n                agentsWrapper.add(thisTripsAgents);\n            })\n            .catch((err) => console.error(err));\n    }\n    agentsWrapper.rotation.set(0, 0.4625123, 0);\n    agentsWrapper.position.set(\n        -(Math.cos(0.4625123) * 822) / 2000 - 1.57 / 2,\n        0,\n        (Math.sin(0.4625123) * 822) / 2000 - 0.92 / 2\n    );\n    agentsWrapper.rotation.set(0, 0.4625123, 0);\n    return agentsWrapper;\n};\n\nconst _makeAgents = (trips, tripName) => {\n    let scale = 0.03;\n    let color = new THREE.Color();\n    color.setHSL(\n        settings.trips[tripName].color.h,\n        settings.trips[tripName].color.s,\n        settings.trips[tripName].color.l\n    );\n\n    let textLoader = new THREE.TextureLoader();\n    let spriteText = textLoader.load(\"./resources/textures/agent.png\");\n    spriteText.minFilter = THREE.LinearFilter;\n    let spritesWarpper = new THREE.Object3D();\n    for (let i = 0; i < trips.length; i++) {\n        var spriteMaterial = new THREE.SpriteMaterial({\n            map: spriteText,\n            transparent: true,\n        });\n\n        var sprite = new THREE.Sprite(spriteMaterial);\n        sprite.material.color = color;\n        sprite.material.blending = THREE.AdditiveBlending;\n        sprite.material.transparent = true;\n        sprite.scale.set(scale, scale, scale);\n        sprite.position.set(0, 0, 0);\n        spritesWarpper.add(sprite);\n    }\n    return spritesWarpper;\n};\n\nexport const _handelCityModel = async () => {\n    let model = await _loadOBJmodel(settings.cityModelURL);\n    // global model material\n    let modelColor = new THREE.Color();\n    modelColor.setHSL(0, 0, 0.3);\n    let modelMaterial = new THREE.MeshPhongMaterial({\n        color: modelColor,\n    });\n\n    model.name = \"cityModel\";\n    model.scale.set(0.000505, 0.000505, 0.000505);\n    model.position.set(-0.0055, 0.7, 0);\n    model.rotation.set(0, 0.4625123, 0);\n    model.traverse(function (child) {\n        // child.castShadow = true;\n        child.material = modelMaterial;\n    });\n\n    return model;\n};\n\n/**\n *\n * @param {*} url\n */\n\nexport const _loadOBJmodel = async (url) => {\n    return new Promise((resolve) => {\n        new OBJLoader().load(url, resolve);\n    }).then((result) => {\n        return result;\n    });\n};\n\n/**\n *\n * @param {*} url\n */\n\nexport const _loadTexture = async (url) => {\n    return new Promise((resolve) => {\n        new THREE.TextureLoader().load(url, resolve);\n    }).then((result) => {\n        result.minFilter = THREE.LinearFilter;\n        return result;\n    });\n};\n\n/**\n *\n * @param {*} renderer\n * @param {*} scene\n */\n\nconst _shaders = () => {\n    const _vertexShader = () => {\n        return `\n    varying vec2 vUv;\n       void main() {\n           vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }\n    `;\n    };\n    //\n    const _fragmentshader = () => {\n        return ` \n    uniform sampler2D baseTexture;\n    uniform sampler2D bloomTexture;\n    varying vec2 vUv;\n    vec4 getTexture( sampler2D texelToLinearTexture ) {\n        return mapTexelToLinear( texture2D( texelToLinearTexture , vUv ) );\n    }\n    void main() {\n        gl_FragColor = ( getTexture( baseTexture ) + vec4( 1.0 ) * getTexture( bloomTexture ) );\n    }`;\n    };\n\n    return { vertex: _vertexShader(), frag: _fragmentshader() };\n};\n\n/**\n *\n * @param {*} renderer\n *     Create a floor.\n\n */\n// ! should consider https://tinyurl.com/wqpozgh\n\nexport const _createFloor = async (renderer) => {\n    var repeatX = 15;\n    var repeatY = 15;\n    let path = \"./resources/textures/floor/\";\n\n    var baseText = await _loadTexture(path + \"WOOD_SML.jpg\");\n    var ao = await _loadTexture(path + \"GLOSS.jpg\");\n    var displace = await _loadTexture(path + \"WOOD_DISP.jpg\");\n    var normalText = await _loadTexture(path + \"NRM.jpg\");\n\n    baseText.anisotropy = renderer.capabilities.getMaxAnisotropy();\n    baseText.wrapS = THREE.RepeatWrapping;\n    baseText.wrapT = THREE.RepeatWrapping;\n    baseText.repeat.set(repeatX, repeatY);\n\n    normalText.anisotropy = renderer.capabilities.getMaxAnisotropy();\n    normalText.wrapS = THREE.RepeatWrapping;\n    normalText.wrapT = THREE.RepeatWrapping;\n    normalText.repeat.set(repeatX, repeatY);\n\n    ao.anisotropy = renderer.capabilities.getMaxAnisotropy();\n    ao.wrapS = THREE.RepeatWrapping;\n    normalText.wrapT = THREE.RepeatWrapping;\n    ao.repeat.set(repeatX, repeatY);\n\n    displace.minFilter = THREE.LinearFilter;\n\n    displace.anisotropy = renderer.capabilities.getMaxAnisotropy();\n    displace.wrapS = THREE.RepeatWrapping;\n    displace.wrapT = THREE.RepeatWrapping;\n    displace.repeat.set(repeatX, repeatY);\n\n    var material = new THREE.MeshStandardMaterial({\n        aoMap: ao,\n        aoMapIntensity: 1,\n        color: 0xffffff,\n        map: baseText,\n        metalnessMap: baseText,\n        displacementMap: displace,\n        displacementScale: 0.1,\n        normalMap: normalText,\n        metalness: 5,\n        roughness: 0.5,\n    });\n    const planeSize = 50;\n    const planeMesh = new THREE.Mesh(\n        new THREE.PlaneBufferGeometry(planeSize, planeSize),\n        material\n    );\n    planeMesh.receiveShadow = true;\n    planeMesh.rotation.x = Math.PI * -0.5;\n    planeMesh.position.y = 0;\n    planeMesh.position.z = 0;\n\n    return planeMesh;\n};\n","// ! https://github.com/mrdoob/three.js/blob/master/examples/css3d_youtube.html\n// ! https://codesandbox.io/s/81qjyxonm8\n// ! https://github.com/mrdoob/three.js/pull/17505\n// ! https://codepen.io/pen/?editors=0010\n// ! Good structure:\n// ! https://codesandbox.io/s/mjp143zq9x?from-embed\n// ! materials https://codepen.io/bartuc/pen/eEbmvJ?editors=0010\n// ! Bloom https://jsfiddle.net/yp2t6op6/3/\n// ! https://github.com/mrdoob/three.js/blob/master/examples/webgl_postprocesnsing_unreal_bloom_selective.html\n// ! https://stackoverflow.com/questions/47922923/ceiling-lights-effect-using-three-js\n// ! Glow https://stemkoski.github.io/Three.js/Shader-Glow.html\n\nimport React, { Component } from \"react\";\nimport { setLoadingState } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport * as THREE from \"three\";\nimport TWEEN from \"@tweenjs/tween.js\";\n\nimport {\n    _setupBloom,\n    _addMetricsObject,\n    _createFloor,\n    _blockCamera,\n    _setupAgents,\n    _handelCityModel,\n    _landscapeModelsLoader,\n    _addCustomSceneObjects,\n    _pplLoader,\n    _objectDisplay,\n} from \"./ThreeUtils\";\nimport OrbitControls from \"three-orbitcontrols\";\nimport * as settings from \"../../settings.json\";\n\nclass ThreeScene extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            timeCounter: 0,\n            simSpeed: 1,\n            trips: {},\n            renderer: false,\n            past: true,\n            camLookAt: new THREE.Vector3(0, 1.25, 0),\n        };\n        this.theta = 0;\n        this.cameraSpeed = 0.5;\n        this.radius = 2.5;\n    }\n\n    componentDidMount() {\n        // get the div dims on init\n        this.width = this.mountingDiv.clientWidth;\n        this.height = this.mountingDiv.clientHeight;\n        window.addEventListener(\"resize\", this.handleWindowResize);\n        // start the app setup\n        setTimeout(() => {\n            this._init();\n        }, 500);\n    }\n\n    componentWillUnmount() {\n        window.cancelAnimationFrame(this.requestID);\n        window.removeEventListener(\"resize\", this.handleWindowResize);\n    }\n\n    _init = async () => {\n        this.shpContainer = new THREE.Object3D();\n        this._sceneSetup()\n            .then(\n                // load urban model\n                await _handelCityModel().then((model) => this.scene.add(model)),\n\n                // load other street models\n                await _landscapeModelsLoader().then((model) => {\n                    this.scene.add(model);\n                }),\n                // floor\n                await _createFloor(this.renderer).then((floor) => {\n                    this.scene.add(floor);\n                }),\n                //  load the rest of the scene\n                await _addCustomSceneObjects().then((pedestalMesh) =>\n                    this.scene.add(pedestalMesh)\n                ),\n\n                //  load the rest of the scene\n                await _addMetricsObject().then((metricsObject) =>\n                    this.scene.add(metricsObject)\n                ),\n                // load the public\n                await _pplLoader().then((ppl) => this.scene.add(ppl)),\n\n                // setup agents\n                await _setupAgents().then((agentWrapper) => {\n                    this.agentWrapper = agentWrapper;\n                    this.scene.add(this.agentWrapper);\n                })\n            )\n            .then(\n                this.setState({ loading: false }),\n                this.props.setLoadingState(this.state.loading),\n                //  start the animation\n                this.startAnimationLoop()\n                //\n            );\n    };\n\n    _sceneSetup = async () => {\n        this.scene = new THREE.Scene();\n        this.scene.dispose();\n        // camera\n        this.camera = new THREE.PerspectiveCamera(\n            50,\n            this.width / this.height,\n            0.01,\n            1000\n        );\n        this.camera.position.z = -4;\n        this.camera.position.x = 0;\n        this.camera.position.y = 2;\n\n        this.controls = new OrbitControls(this.camera, this.mountingDiv);\n        this.controls.maxDistance = 7;\n        this.controls.minDistance = 0.5;\n        this.camera.lookAt(new THREE.Vector3(0, 1.25, 0));\n        this.controls.target.set(0, 0.9, 0);\n\n        // renderer\n        this.renderer = new THREE.WebGLRenderer({\n            antialias: true,\n            alpha: true,\n        });\n\n        this.renderer.dispose();\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.toneMapping = THREE.ReinhardToneMapping;\n        this.renderer.setSize(this.width, this.height);\n        this.mountingDiv.appendChild(this.renderer.domElement);\n\n        /**\n         * Lights\n         */\n\n        this.whiteLight1 = new THREE.PointLight(0xffffff, 4, 1);\n        this.whiteLight1.name = \"whiteLight\";\n        this.whiteLight1.position.set(0, 1.5, -0.5);\n        this.whiteLight1.intensity = settings.lights.w1.low;\n\n        this.whiteLight2 = new THREE.PointLight(0xffffff, 4, 1);\n        this.whiteLight2.name = \"whiteLight\";\n        this.whiteLight2.position.set(0, 1.5, 0.5);\n        this.whiteLight2.intensity = settings.lights.w2.low;\n\n        //\n        this.orangeLight = new THREE.PointLight(0xf26101, 0, 100);\n        this.orangeLight.intensity = settings.lights.orange.low;\n        this.orangeLight.name = \"orangeLight\";\n        this.orangeLight.position.set(-1, 2, -1);\n        this.orangeLight.castShadow = true;\n        this.orangeLight.shadow.radius = 2;\n        //\n        this.blueLight = new THREE.PointLight(0x0071bc, 0, 100);\n        this.blueLight.intensity = settings.lights.blue.low;\n\n        this.blueLight.name = \"this.blueLight\";\n        this.blueLight.position.set(1, 2, 1);\n        this.blueLight.castShadow = true;\n        this.blueLight.shadow.radius = 2;\n\n        //\n        this.lightsWrapper = new THREE.Object3D();\n        this.lightsWrapper.name = \"lightsWrapper\";\n        this.lightsWrapper.add(\n            this.whiteLight1,\n            this.whiteLight2,\n            this.orangeLight,\n            this.blueLight\n        );\n\n        this.scene.add(this.lightsWrapper);\n\n        /*\n            BLOOM\n        */\n        let postEffect = _setupBloom(\n            this.width,\n            this.height,\n            this.scene,\n            this.camera,\n            this.renderer\n        );\n        this.bloomComposer = postEffect.bloomComposer;\n        this.finalComposer = postEffect.finalComposer;\n    };\n\n    _animateAgents = () => {\n        const time = this.state.timeCounter;\n        this.agentWrapper.children.forEach((tripsObject) => {\n            for (let i = 0; i < tripsObject.trips.length; i++) {\n                if (tripsObject.trips[i].path[time]) {\n                    let pnt = tripsObject.trips[i].path[time];\n                    let agent = tripsObject.children[i];\n                    agent.position.set(pnt[0], 0.705, pnt[1]);\n                }\n            }\n        });\n\n        this.setState({\n            timeCounter:\n                this.state.timeCounter < settings.simulationDuration\n                    ? this.state.timeCounter + this.state.simSpeed\n                    : 0,\n        });\n    };\n\n    handleWindowResize = () => {\n        const width = this.mountingDiv.clientWidth;\n        const height = this.mountingDiv.clientHeight;\n        this.renderer.setSize(width, height);\n\n        this.bloomComposer.setSize(width, height);\n        this.finalComposer.setSize(width, height);\n\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    };\n\n    componentDidUpdate(prevProps) {\n        this._handleVis(prevProps);\n    }\n\n    _handleVis = (prevProps) => {\n        if (prevProps !== this.props) {\n            let {\n                scenarioSwitch,\n                parks,\n                culturalBuildings,\n                cars,\n                bicycles,\n                pedestrians,\n                quality,\n                cityModelSwitch,\n                metricsObjSwitch,\n            } = this.props.menuInteraction;\n\n            let cityModelObject = this.scene.getObjectByName(\"cityModel\");\n\n            //\n            let trips_car_before = this.scene.getObjectByName(\n                \"trips_car_before\"\n            );\n            let trips_car_after = this.scene.getObjectByName(\"trips_car_after\");\n            let trips_pedestrians_before = this.scene.getObjectByName(\n                \"trips_pedestrians_before\"\n            );\n            let trips_pedestrians_after = this.scene.getObjectByName(\n                \"trips_pedestrians_after\"\n            );\n            let trips_bike_before = this.scene.getObjectByName(\n                \"trips_bike_before\"\n            );\n            let trips_bike_after = this.scene.getObjectByName(\n                \"trips_bike_after\"\n            );\n            let parks_before = this.scene.getObjectByName(\"parks_before\");\n            let parks_after = this.scene.getObjectByName(\"parks_after\");\n            let cultural_before = this.scene.getObjectByName(\"cultural_before\");\n            let cultural_after = this.scene.getObjectByName(\"cultural_after\");\n            let metricsObj = this.scene.getObjectByName(\"metricsObj\");\n            // find which menu item has changed\n            for (const thisMenuItem in prevProps.menuInteraction) {\n                if (\n                    prevProps.menuInteraction[thisMenuItem] !==\n                    this.props.menuInteraction[thisMenuItem]\n                ) {\n                    switch (thisMenuItem) {\n                        case \"scenarioSwitch\":\n                            const lights = [this.blueLight, this.orangeLight];\n\n                            lights.forEach((thisLight) => {\n                                new TWEEN.Tween(thisLight.position)\n                                    .to(\n                                        {\n                                            x: -thisLight.position.x,\n                                            z: -thisLight.position.z,\n                                        },\n                                        2000\n                                    )\n                                    .easing(TWEEN.Easing.Quadratic.Out)\n                                    .onUpdate(() => {})\n                                    .start();\n                            });\n\n                            _objectDisplay(parks_before, parks);\n                            _objectDisplay(\n                                parks_after,\n                                scenarioSwitch && parks\n                            );\n\n                            _objectDisplay(cultural_before, culturalBuildings);\n                            _objectDisplay(\n                                cultural_after,\n                                scenarioSwitch && culturalBuildings\n                            );\n\n                            _objectDisplay(\n                                trips_car_before,\n                                !scenarioSwitch && cars\n                            );\n                            _objectDisplay(\n                                trips_car_after,\n                                scenarioSwitch && cars\n                            );\n\n                            _objectDisplay(\n                                trips_bike_before,\n                                !scenarioSwitch && bicycles\n                            );\n                            _objectDisplay(\n                                trips_bike_after,\n                                scenarioSwitch && bicycles\n                            );\n\n                            _objectDisplay(\n                                trips_pedestrians_before,\n                                !scenarioSwitch && pedestrians\n                            );\n                            _objectDisplay(\n                                trips_pedestrians_after,\n                                scenarioSwitch && pedestrians\n                            );\n\n                            // change radar texture\n\n                            new TWEEN.Tween(metricsObj.rotation)\n                                .to(\n                                    {\n                                        x: 0,\n                                        y: scenarioSwitch ? -3.14159 : 3.14159,\n                                        z: 0,\n                                    },\n                                    2000\n                                )\n                                .easing(TWEEN.Easing.Cubic.InOut)\n                                .start()\n                                .onStart(() => {\n                                    metricsObj.material.forEach((material) => {\n                                        if (material) {\n                                            material.map = scenarioSwitch\n                                                ? material.userData\n                                                      .radarAfterText\n                                                : material.userData\n                                                      .radarBeforeText;\n                                            material.map.needsUpdate = true;\n                                        }\n                                    });\n                                });\n\n                            break;\n\n                        case \"metricsObjSwitch\":\n                            _objectDisplay(metricsObj, metricsObjSwitch);\n                            break;\n\n                        case \"parks\":\n                            _objectDisplay(parks_before, parks);\n                            _objectDisplay(\n                                parks_after,\n                                scenarioSwitch && parks\n                            );\n                            break;\n\n                        case \"culturalBuildings\":\n                            _objectDisplay(cultural_before, culturalBuildings);\n                            _objectDisplay(\n                                cultural_after,\n                                scenarioSwitch && culturalBuildings\n                            );\n                            break;\n\n                        case \"cars\":\n                            _objectDisplay(\n                                trips_car_before,\n                                !scenarioSwitch && cars\n                            );\n                            _objectDisplay(\n                                trips_car_after,\n                                scenarioSwitch && cars\n                            );\n                            break;\n\n                        case \"bicycles\":\n                            _objectDisplay(\n                                trips_bike_before,\n                                !scenarioSwitch && bicycles\n                            );\n                            _objectDisplay(\n                                trips_bike_after,\n                                scenarioSwitch && bicycles\n                            );\n                            break;\n\n                        case \"pedestrians\":\n                            _objectDisplay(\n                                trips_pedestrians_before,\n                                !scenarioSwitch && pedestrians\n                            );\n                            _objectDisplay(\n                                trips_pedestrians_after,\n                                scenarioSwitch && pedestrians\n                            );\n                            break;\n\n                        case \"quality\":\n                            /**\n                             * Setup qulity\n                             */\n                            this.setState({ renderer: quality });\n                            // if low quality render\n                            if (!quality) {\n                                this.blueLight.intensity =\n                                    settings.lights.blue.low;\n                                this.orangeLight.intensity =\n                                    settings.lights.orange.low;\n                                this.whiteLight1.intensity =\n                                    settings.lights.w1.low;\n                                this.whiteLight2.intensity =\n                                    settings.lights.w2.low;\n                            } else {\n                                // higher qulaity\n                                this.blueLight.intensity =\n                                    settings.lights.blue.high;\n                                this.orangeLight.intensity =\n                                    settings.lights.orange.high;\n                                this.whiteLight1.intensity =\n                                    settings.lights.w1.high;\n                                this.whiteLight2.intensity =\n                                    settings.lights.w2.high;\n                            }\n                            break;\n\n                        case \"cityModelSwitch\":\n                            if (!cityModelSwitch) {\n                                //\n                                _objectDisplay(cityModelObject, false);\n                            } else {\n                                _objectDisplay(cityModelObject, true);\n                            }\n                            break;\n\n                        case \"cameraScene\":\n                            let slectedScene = this.props.menuInteraction\n                                .cameraScene;\n                            console.log(slectedScene);\n\n                            if (slectedScene === \"animateCamera\") {\n                                break;\n                            } else {\n                                let newCamPos =\n                                    settings.cameraScenesPositions[slectedScene]\n                                        .camPos;\n                                let l =\n                                    settings.cameraScenesPositions[slectedScene]\n                                        .lookAt;\n                                let newLookAt = new THREE.Vector3(\n                                    l[0],\n                                    l[1],\n                                    l[2]\n                                );\n                                // fly camera to new postion\n                                new TWEEN.Tween(this.camera.position)\n                                    .to(\n                                        {\n                                            x: newCamPos[0],\n                                            y: newCamPos[1],\n                                            z: newCamPos[2],\n                                        },\n                                        1000\n                                    )\n                                    .easing(TWEEN.Easing.Quadratic.Out)\n                                    .onUpdate(() => {\n                                        this.camera.lookAt(newLookAt);\n                                    })\n                                    .start();\n                            }\n                            break;\n\n                        default:\n                            break;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Each frame, choose renderer quality based  on state\n     */\n    _chooseRenderer = () => {\n        if (this.state.renderer) {\n            this.bloomComposer.render();\n            this.finalComposer.render();\n        } else {\n            this.renderer.render(this.scene, this.camera);\n        }\n    };\n\n    _cameraState = () => {\n        if (this.props.menuInteraction.cameraScene === \"animateCamera\") {\n            this.theta += this.cameraSpeed;\n            this.camera.position.x =\n                this.radius * Math.sin(THREE.MathUtils.degToRad(this.theta));\n            this.camera.position.y = 1.5;\n            this.camera.position.z =\n                this.radius * Math.cos(THREE.MathUtils.degToRad(this.theta));\n            this.camera.lookAt(new THREE.Vector3(0, 1.25, 0));\n            this.camera.updateMatrixWorld();\n        } else {\n            // force camera lookAt\n\n            _blockCamera(this.camera);\n        }\n    };\n\n    startAnimationLoop = () => {\n        this._cameraState();\n\n        // control TWEEN event\n        TWEEN.update();\n        // animate the sim\n        this._animateAgents();\n\n        //    choose the renderer quality\n        this._chooseRenderer();\n\n        this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n    };\n\n    _onMouseUp(e) {\n        let mouse = new THREE.Vector2();\n        let ray = new THREE.Raycaster();\n\n        mouse.x = (e.clientX / this.width) * 2 - 1;\n        mouse.y = -(e.clientY / this.height) * 2 + 1;\n        ray.setFromCamera(mouse.clone(), this.camera);\n\n        var objects = ray.intersectObjects(this.scene.children);\n        if (objects[0] && objects[0].point) {\n            console.log(objects[0].object);\n            let rayPos = objects[0].point;\n            this.controls.target.set(rayPos);\n            this.controls.update();\n        }\n    }\n\n    render() {\n        let displayTHREEscene =\n            // true;\n            this.props.startScene;\n\n        return (\n            <React.Fragment>\n                <div\n                    style={\n                        displayTHREEscene\n                            ? {\n                                  height: \"100%\",\n                                  position: \"fixed\",\n                                  width: \"100%\",\n                                  top: 0,\n                                  left: 0,\n                                  backgroundColor: \"black\",\n                                  visibility: \"\",\n                              }\n                            : {\n                                  height: \"100%\",\n                                  width: \"100%\",\n                                  position: \"fixed\",\n\n                                  top: 0,\n                                  left: 0,\n                                  backgroundColor: \"black\",\n                                  visibility: \"hidden\",\n                              }\n                    }\n                    ref={(div) => (this.mountingDiv = div)}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        startScene: state.START_SCENE,\n    };\n};\n\nconst mapDispatchToProps = {\n    setLoadingState: setLoadingState,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeScene);\n","import React, { Component } from \"react\";\nimport LandingPage from \"./components/LandingPage/LandingPage\";\nimport Menu from \"./components/Menu/Menu\";\nimport ThreeScene from \"./components/ThreeScene/ThreeScene\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <ThreeScene menuInteraction={this.props.menuInteraction} />\n                {this.props.showMenu ? <Menu /> : null}\n                {/* <Menu /> */}\n                <LandingPage />\n                {/* <div\n                    style={{\n                        pointerEvents: \"none\",\n                        position: \"fixed\",\n                        left: \"50%\",\n                        top: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                        backgroundColor: \"transparent\",\n                        opacity: 0.2,\n                    }}\n                >\n                    <h1\n                        style={{\n                            fontSize: \"15em\",\n                            backgroundColor: \"rgba(0,0,0,0)\",\n\n                            textShadow:\n                                \"-3px -3px 0 #FFF, 3px -3px 0 #FFF, -3px 3px 0 #FFF, 3px 3px 0 #FFF\",\n                        }}\n                    >\n                        DRAFT\n                    </h1>\n                </div> */}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        menuInteraction: state.MENU_INTERACTION,\n        showMenu: state.START_SCENE,\n    };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nconst ProviderWrapper = ({ children, store }) => (\n    <Provider store={store}>{children}</Provider>\n);\n\nexport default ProviderWrapper;\n","import \"../settings.json\";\nimport * as settings from \"../settings.json\";\n\n/**\n * ! INIT STATE\n */\n\nconst initialState = {\n    LOADING: true,\n    START_SCENE: false,\n    MENU_INTERACTION: settings.initState,\n};\n\nexport default initialState;\n","import {\n    SET_LOADING_STATE,\n    SET_START_STATE,\n    MENU_INTERACTION,\n} from \"./actions\";\nimport initialState from \"./initialState\";\n\n/**\n * REDUCER\n */\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_LOADING_STATE:\n            return { ...state, LOADING: action.data };\n        case SET_START_STATE:\n            return { ...state, START_SCENE: action.data };\n        case MENU_INTERACTION:\n            return { ...state, MENU_INTERACTION: action.data };\n        default:\n            return state;\n    }\n}\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst reduxDevTools =\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst configureStore = () => {\n    const store = createStore(reducer, reduxDevTools);\n\n    if (process.env.NODE_ENV !== \"production\") {\n        if (module.hot) {\n            module.hot.accept(\"./reducer\", () => {\n                store.replaceReducer(reducer);\n            });\n        }\n    }\n\n    return store;\n};\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Provider from \"./redux/Provider\";\n\nimport configureStore from \"./redux/store\";\nconst store = configureStore();\n\nconst root = document.getElementById(\"root\");\nconst render = () => {\n    return ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n\n        root\n    );\n};\n\nrender(App);\n\nif (module.hot) {\n    module.hot.accept(\"./App\", () => {\n        const NextApp = require(\"./App\").default;\n        render(NextApp);\n    });\n}\n"],"sourceRoot":""}